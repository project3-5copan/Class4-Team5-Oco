{"ast":null,"code":"import { merge, rebind } from \"../utils\";\nimport { sar } from \"../calculator\";\nimport baseIndicator from \"./baseIndicator\";\nvar ALGORITHM_TYPE = \"SMA\";\nexport default function () {\n  var base = baseIndicator().type(ALGORITHM_TYPE).accessor(function (d) {\n    return d.sar;\n  });\n  var underlyingAlgorithm = sar();\n  var mergedAlgorithm = merge().algorithm(underlyingAlgorithm).merge(function (datum, i) {\n    datum.sar = i;\n  });\n\n  var indicator = function indicator(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      merge: true\n    };\n\n    if (options.merge) {\n      if (!base.accessor()) {\n        throw new Error(\"Set an accessor to \".concat(ALGORITHM_TYPE, \" before calculating\"));\n      }\n\n      return mergedAlgorithm(data);\n    }\n\n    return underlyingAlgorithm(data);\n  };\n\n  rebind(indicator, base, \"id\", \"accessor\", \"stroke\", \"echo\", \"type\");\n  rebind(indicator, underlyingAlgorithm, \"options\", \"undefinedLength\");\n  rebind(indicator, mergedAlgorithm, \"merge\");\n  return indicator;\n}","map":null,"metadata":{},"sourceType":"module"}