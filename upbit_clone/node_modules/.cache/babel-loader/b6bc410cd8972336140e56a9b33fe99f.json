{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { ToolTipText } from \"./ToolTipText\";\nimport { ToolTipTSpanLabel } from \"./ToolTipTSpanLabel\";\nexport var SingleTooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(SingleTooltip, _React$Component);\n\n  var _super = _createSuper(SingleTooltip);\n\n  function SingleTooltip() {\n    var _this;\n\n    _classCallCheck(this, SingleTooltip);\n\n    _this = _super.apply(this, arguments);\n\n    _this.handleClick = function (event) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          forChart = _this$props.forChart,\n          options = _this$props.options;\n\n      if (onClick !== undefined) {\n        onClick(event, Object.assign({\n          chartId: forChart\n        }, options));\n      }\n    };\n\n    return _this;\n  }\n  /*\n   * Renders the value next to the label.\n   */\n\n\n  _createClass(SingleTooltip, [{\n    key: \"renderValueNextToLabel\",\n    value: function renderValueNextToLabel() {\n      var _this$props2 = this.props,\n          origin = _this$props2.origin,\n          yLabel = _this$props2.yLabel,\n          yValue = _this$props2.yValue,\n          labelFill = _this$props2.labelFill,\n          valueFill = _this$props2.valueFill,\n          withShape = _this$props2.withShape,\n          fontSize = _this$props2.fontSize,\n          fontFamily = _this$props2.fontFamily,\n          fontWeight = _this$props2.fontWeight;\n      return React.createElement(\"g\", {\n        transform: \"translate(\".concat(origin[0], \", \").concat(origin[1], \")\"),\n        onClick: this.handleClick\n      }, withShape ? React.createElement(\"rect\", {\n        x: \"0\",\n        y: \"-6\",\n        width: \"6\",\n        height: \"6\",\n        fill: valueFill\n      }) : null, React.createElement(ToolTipText, {\n        x: withShape ? 8 : 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }, React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, yLabel, \": \"), React.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue)));\n    }\n    /*\n     * Renders the value beneath the label.\n     */\n\n  }, {\n    key: \"renderValueBeneathLabel\",\n    value: function renderValueBeneathLabel() {\n      var _this$props3 = this.props,\n          origin = _this$props3.origin,\n          yLabel = _this$props3.yLabel,\n          yValue = _this$props3.yValue,\n          labelFill = _this$props3.labelFill,\n          valueFill = _this$props3.valueFill,\n          withShape = _this$props3.withShape,\n          fontSize = _this$props3.fontSize,\n          fontFamily = _this$props3.fontFamily,\n          fontWeight = _this$props3.fontWeight;\n      return React.createElement(\"g\", {\n        transform: \"translate(\".concat(origin[0], \", \").concat(origin[1], \")\"),\n        onClick: this.handleClick\n      }, withShape ? React.createElement(\"line\", {\n        x1: 0,\n        y1: 2,\n        x2: 0,\n        y2: 28,\n        stroke: valueFill,\n        strokeWidth: \"4px\"\n      }) : null, React.createElement(ToolTipText, {\n        x: 5,\n        y: 11,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }, React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, yLabel), React.createElement(\"tspan\", {\n        x: \"5\",\n        dy: \"15\",\n        fill: valueFill\n      }, yValue)));\n    }\n    /*\n     * Renders the value next to the label.\n     * The parent component must have a \"text\"-element.\n     */\n\n  }, {\n    key: \"renderInline\",\n    value: function renderInline() {\n      var _this$props4 = this.props,\n          yLabel = _this$props4.yLabel,\n          yValue = _this$props4.yValue,\n          labelFill = _this$props4.labelFill,\n          valueFill = _this$props4.valueFill,\n          fontSize = _this$props4.fontSize,\n          fontFamily = _this$props4.fontFamily,\n          fontWeight = _this$props4.fontWeight;\n      return React.createElement(\"tspan\", {\n        onClick: this.handleClick,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }, React.createElement(ToolTipTSpanLabel, {\n        fill: labelFill\n      }, yLabel, \":\\xA0\"), React.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue, \"\\xA0\\xA0\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var layout = this.props.layout;\n      var comp = null;\n\n      switch (layout) {\n        case \"horizontal\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"horizontalRows\":\n          comp = this.renderValueBeneathLabel();\n          break;\n\n        case \"horizontalInline\":\n          comp = this.renderInline();\n          break;\n\n        case \"vertical\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"verticalRows\":\n          comp = this.renderValueBeneathLabel();\n          break;\n\n        default:\n          comp = this.renderValueNextToLabel();\n      }\n\n      return comp;\n    }\n  }]);\n\n  return SingleTooltip;\n}(React.Component);\nSingleTooltip.defaultProps = {\n  labelFill: \"#4682B4\",\n  valueFill: \"#000000\",\n  withShape: false\n};","map":null,"metadata":{},"sourceType":"module"}