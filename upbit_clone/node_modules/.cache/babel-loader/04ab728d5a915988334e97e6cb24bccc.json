{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { functor } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nexport var BarAnnotation = /*#__PURE__*/function (_React$Component) {\n  _inherits(BarAnnotation, _React$Component);\n\n  var _super = _createSuper(BarAnnotation);\n\n  function BarAnnotation() {\n    var _this;\n\n    _classCallCheck(this, BarAnnotation);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onClick = function (e) {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          xScale = _this$props.xScale,\n          yScale = _this$props.yScale,\n          datum = _this$props.datum;\n\n      if (onClick !== undefined) {\n        onClick(e, {\n          xScale: xScale,\n          yScale: yScale,\n          datum: datum\n        });\n      }\n    };\n\n    _this.helper = function (props, xAccessor, xScale, yScale) {\n      var x = props.x,\n          y = props.y,\n          datum = props.datum,\n          fill = props.fill,\n          tooltip = props.tooltip,\n          plotData = props.plotData;\n      var xFunc = functor(x);\n      var yFunc = functor(y);\n      var _ref = [xFunc({\n        xScale: xScale,\n        xAccessor: xAccessor,\n        datum: datum,\n        plotData: plotData\n      }), yFunc({\n        yScale: yScale,\n        datum: datum,\n        plotData: plotData\n      })],\n          xPos = _ref[0],\n          yPos = _ref[1];\n      return {\n        x: xPos,\n        y: yPos,\n        fill: functor(fill)(datum),\n        tooltip: functor(tooltip)(datum)\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(BarAnnotation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          stroke = _this$props2.stroke,\n          opacity = _this$props2.opacity,\n          xAccessor = _this$props2.xAccessor,\n          xScale = _this$props2.xScale,\n          yScale = _this$props2.yScale,\n          path = _this$props2.path,\n          text = _this$props2.text,\n          textXOffset = _this$props2.textXOffset,\n          textYOffset = _this$props2.textYOffset,\n          textAnchor = _this$props2.textAnchor,\n          fontFamily = _this$props2.fontFamily,\n          fontSize = _this$props2.fontSize,\n          textFill = _this$props2.textFill,\n          textOpacity = _this$props2.textOpacity,\n          textRotate = _this$props2.textRotate,\n          textIcon = _this$props2.textIcon,\n          textIconFontSize = _this$props2.textIconFontSize,\n          textIconFill = _this$props2.textIconFill,\n          textIconOpacity = _this$props2.textIconOpacity,\n          textIconRotate = _this$props2.textIconRotate,\n          textIconXOffset = _this$props2.textIconXOffset,\n          textIconYOffset = _this$props2.textIconYOffset;\n\n      var _this$helper = this.helper(this.props, xAccessor, xScale, yScale),\n          x = _this$helper.x,\n          y = _this$helper.y,\n          fill = _this$helper.fill,\n          tooltip = _this$helper.tooltip;\n\n      return React.createElement(\"g\", {\n        className: className,\n        onClick: this.onClick\n      }, tooltip !== undefined ? React.createElement(\"title\", null, tooltip) : null, text !== undefined ? React.createElement(\"text\", {\n        x: x,\n        y: y,\n        dx: textXOffset,\n        dy: textYOffset,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fill: textFill,\n        opacity: textOpacity,\n        transform: textRotate != undefined ? \"rotate(\".concat(textRotate, \", \").concat(x, \", \").concat(y, \")\") : undefined,\n        textAnchor: textAnchor\n      }, text) : null, textIcon !== undefined ? React.createElement(\"text\", {\n        x: x,\n        y: y,\n        dx: textIconXOffset,\n        dy: textIconYOffset,\n        fontSize: textIconFontSize,\n        fill: textIconFill,\n        opacity: textIconOpacity,\n        transform: textIconRotate != undefined ? \"rotate(\".concat(textIconRotate, \", \").concat(x, \", \").concat(y, \")\") : undefined,\n        textAnchor: textAnchor\n      }, textIcon) : null, path !== undefined ? React.createElement(\"path\", {\n        d: path({\n          x: x,\n          y: y\n        }),\n        stroke: stroke,\n        fill: fill,\n        opacity: opacity\n      }) : null);\n    }\n  }]);\n\n  return BarAnnotation;\n}(React.Component);\nBarAnnotation.defaultProps = {\n  className: \"react-financial-charts-bar-annotation\",\n  opacity: 1,\n  fill: \"#000000\",\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 10,\n  textAnchor: \"middle\",\n  textFill: \"#000000\",\n  textOpacity: 1,\n  textIconFill: \"#000000\",\n  textIconFontSize: 10,\n  x: function x(_ref2) {\n    var xScale = _ref2.xScale,\n        xAccessor = _ref2.xAccessor,\n        datum = _ref2.datum;\n    return xScale(xAccessor(datum));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}