{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { merge, rebind, slidingWindow } from \"../utils\";\nimport baseIndicator from \"./baseIndicator\";\nimport { ElderImpulse as appearanceOptions } from \"./defaultOptionsForAppearance\";\nvar ALGORITHM_TYPE = \"ElderImpulse\";\nexport default function () {\n  var macdSource;\n  var emaSource;\n  var base = baseIndicator().type(ALGORITHM_TYPE).stroke(appearanceOptions.stroke).fill(undefined);\n  var underlyingAlgorithm = slidingWindow().windowSize(2).undefinedValue(\"neutral\").accumulator(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        prev = _ref2[0],\n        curr = _ref2[1];\n\n    if (macdSource === undefined) {\n      throw new Error(\"macdSource not defined for \".concat(ALGORITHM_TYPE, \" calculator\"));\n    }\n\n    if (emaSource === undefined) {\n      throw new Error(\"emaSource not defined for \".concat(ALGORITHM_TYPE, \" calculator\"));\n    }\n\n    var prevMacd = macdSource(prev);\n    var prevEMA = emaSource(prev);\n\n    if (prevMacd !== undefined && prevEMA !== undefined) {\n      var prevMACDDivergence = prevMacd.divergence;\n      var currMACDDivergence = macdSource(curr).divergence;\n      var currEMA = emaSource(curr);\n\n      if (currMACDDivergence >= prevMACDDivergence && currEMA >= prevEMA) {\n        return \"up\";\n      }\n\n      if (currMACDDivergence <= prevMACDDivergence && currEMA <= prevEMA) {\n        return \"down\";\n      }\n    }\n\n    return \"neutral\";\n  });\n  var mergedAlgorithm = merge().algorithm(underlyingAlgorithm).merge(function (datum, i) {\n    datum.elderImpulse = i;\n  });\n\n  var indicator = function indicator(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      merge: true\n    };\n    var newData = options.merge ? mergedAlgorithm(data) : underlyingAlgorithm(data);\n    return newData;\n  };\n\n  indicator.macdSource = function (x) {\n    if (!arguments.length) {\n      return macdSource;\n    }\n\n    macdSource = x;\n    return indicator;\n  };\n\n  indicator.emaSource = function (x) {\n    if (!arguments.length) {\n      return emaSource;\n    }\n\n    emaSource = x;\n    return indicator;\n  };\n\n  rebind(indicator, base, \"id\", \"echo\", \"type\", \"stroke\");\n  rebind(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\n  return indicator;\n}","map":null,"metadata":{},"sourceType":"module"}