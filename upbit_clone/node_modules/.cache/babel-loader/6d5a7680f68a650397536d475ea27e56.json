{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { head, isDefined, mapObject, GenericComponent, getMouseCanvas } from \"@react-financial-charts/core\";\nimport { getMorePropsForChart, getSelected } from \"./utils\";\nexport var DrawingObjectSelector = /*#__PURE__*/function (_React$Component) {\n  _inherits(DrawingObjectSelector, _React$Component);\n\n  var _super = _createSuper(DrawingObjectSelector);\n\n  function DrawingObjectSelector() {\n    var _this;\n\n    _classCallCheck(this, DrawingObjectSelector);\n\n    _this = _super.apply(this, arguments);\n\n    _this.getInteraction = function (moreProps) {\n      var _this$props = _this.props,\n          getInteractiveNodes = _this$props.getInteractiveNodes,\n          drawingObjectMap = _this$props.drawingObjectMap;\n      var interactiveNodes = getInteractiveNodes();\n      var interactives = mapObject(interactiveNodes, function (each) {\n        var key = drawingObjectMap[each.type];\n        var valueArray = isDefined(key) ? each.node.props[key] : undefined;\n        var valuePresent = isDefined(valueArray) && Array.isArray(valueArray) && valueArray.length > 0;\n\n        if (valuePresent) {\n          var morePropsForChart = getMorePropsForChart(moreProps, each.chartId);\n          var objects = each.node.getSelectionState(morePropsForChart);\n          return {\n            type: each.type,\n            chartId: each.chartId,\n            objects: objects\n          };\n        }\n\n        return {\n          type: each.type,\n          chartId: each.chartId,\n          objects: []\n        };\n      });\n      return interactives;\n    };\n\n    _this.handleClick = function (e, moreProps) {\n      e.preventDefault();\n      var onSelect = _this.props.onSelect;\n      var enabled = _this.props.enabled;\n\n      if (!enabled) {\n        return;\n      }\n\n      var interactives = _this.getInteraction(moreProps);\n\n      if (onSelect !== undefined) {\n        onSelect(e, interactives, moreProps);\n      }\n    };\n\n    _this.handleDoubleClick = function (e, moreProps) {\n      e.preventDefault();\n      var onDoubleClick = _this.props.onDoubleClick;\n      var enabled = _this.props.enabled;\n\n      if (!enabled) {\n        return;\n      }\n\n      var interactives = _this.getInteraction(moreProps);\n\n      var allSelected = getSelected(interactives);\n\n      if (allSelected.length > 0) {\n        var selected = head(allSelected);\n        var item = {\n          type: selected.type,\n          chartId: selected.chartId,\n          object: head(selected.objects)\n        };\n        var morePropsForChart = getMorePropsForChart(moreProps, selected.chartId);\n\n        if (onDoubleClick !== undefined) {\n          onDoubleClick(e, item, morePropsForChart);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DrawingObjectSelector, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GenericComponent, {\n        canvasToDraw: getMouseCanvas,\n        onMouseDown: this.handleClick,\n        onDoubleClick: this.handleDoubleClick,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return DrawingObjectSelector;\n}(React.Component);\nDrawingObjectSelector.defaultProps = {\n  enabled: true\n};","map":null,"metadata":{},"sourceType":"module"}