{"ast":null,"code":"import _defineProperty from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { call, put, select, flush, delay } from \"redux-saga/effects\";\nimport { startLoading, finishLoading } from \"../Reducer/loadingReducer\";\nimport { throttle } from \"lodash\";\nimport { buffers, eventChannel, END } from \"redux-saga\";\nimport encoding from \"text-encoding\"; // 캔들용 사가\n\nvar createRequestSaga = function createRequestSaga(type, api, dataMaker) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  var ERROR = \"\".concat(type, \"_ERROR\");\n  return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var action,\n        res,\n        state,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            action = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return put(startLoading(type));\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return call(api, action.payload);\n\n          case 6:\n            res = _context.sent;\n            _context.next = 9;\n            return select();\n\n          case 9:\n            state = _context.sent;\n            _context.next = 12;\n            return put({\n              type: SUCCESS,\n              payload: dataMaker(res.data, state)\n            });\n\n          case 12:\n            _context.next = 14;\n            return put(finishLoading(type));\n\n          case 14:\n            _context.next = 23;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](3);\n            _context.next = 20;\n            return put({\n              type: ERROR,\n              payload: _context.t0\n            });\n\n          case 20:\n            _context.next = 22;\n            return put(finishLoading(type));\n\n          case 22:\n            throw _context.t0;\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 16]]);\n  });\n}; // 선택 옵션 변경용 사가\n\n\nvar createChangeOptionSaga = function createChangeOptionSaga(type) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  return /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var action,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            action = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            _context2.next = 3;\n            return put({\n              type: SUCCESS,\n              payload: action.payload\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  });\n}; // 웹소켓 연결용 Thunk\n\n\nvar createConnectSocketThunk = function createConnectSocketThunk(type, connectType, dataMaker) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  var ERROR = \"\".concat(type, \"_ERROR\");\n  return function () {\n    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function (dispatch, getState) {\n      var client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n      client.binaryType = \"arraybuffer\";\n\n      client.onopen = function () {\n        client.send(JSON.stringify([{\n          ticket: \"downbit-clone\"\n        }, {\n          type: connectType,\n          codes: action.payload\n        }]));\n      };\n\n      client.onmessage = function (evt) {\n        var enc = new encoding.TextDecoder(\"utf-8\");\n        var arr = new Uint8Array(evt.data);\n        var data = JSON.parse(enc.decode(arr));\n        var state = getState();\n        dispatch({\n          type: SUCCESS,\n          payload: dataMaker(data, state)\n        });\n      };\n\n      client.onerror = function (e) {\n        dispatch({\n          type: ERROR,\n          payload: e\n        });\n      };\n    };\n  };\n}; // 웹소켓 연결용 Thunk\n\n\nvar createConnectSocketThrottleThunk = function createConnectSocketThrottleThunk(type, connectType, dataMaker) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  var ERROR = \"\".concat(type, \"_ERROR\");\n  var throttleDispatch = throttle(function (dispatch, state, data) {\n    dispatch({\n      type: SUCCESS,\n      payload: dataMaker(data, state)\n    });\n  }, 500);\n  return function () {\n    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function (dispatch, getState) {\n      var client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n      client.binaryType = \"arraybuffer\";\n\n      client.onopen = function () {\n        client.send(JSON.stringify([{\n          ticket: \"downbit-clone\"\n        }, {\n          type: connectType,\n          codes: action.payload\n        }]));\n      };\n\n      client.onmessage = function (evt) {\n        var enc = new encoding.TextDecoder(\"utf-8\");\n        var arr = new Uint8Array(evt.data);\n        var data = JSON.parse(enc.decode(arr));\n        var state = getState(); // dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\n\n        throttleDispatch(dispatch, state, data);\n      };\n\n      client.onerror = function (e) {\n        dispatch({\n          type: ERROR,\n          payload: e\n        });\n      };\n    };\n  };\n}; // 소켓 만들기\n\n\nvar createSocket = function createSocket() {\n  var client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n  client.binaryType = \"arraybuffer\";\n  return client;\n}; // 소켓 연결용\n\n\nvar connectSocekt = function connectSocekt(socket, connectType, action, buffer) {\n  return eventChannel(function (emit) {\n    socket.onopen = function () {\n      socket.send(JSON.stringify([{\n        ticket: \"downbit-clone\"\n      }, {\n        type: connectType,\n        codes: action.payload\n      }]));\n    };\n\n    socket.onmessage = function (evt) {\n      var enc = new encoding.TextDecoder(\"utf-8\"); // const arr = new Uint8Array(evt.data);\n\n      var data = JSON.parse(enc.decode(evt.data));\n      emit(data);\n    };\n\n    socket.onerror = function (evt) {\n      emit(evt);\n      emit(END);\n    };\n\n    var unsubscribe = function unsubscribe() {\n      socket.close();\n    };\n\n    return unsubscribe;\n  }, buffer || buffers.none());\n}; // 웹소켓 연결용 사가\n\n\nvar createConnectSocketSaga = function createConnectSocketSaga(type, connectType, dataMaker) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  var ERROR = \"\".concat(type, \"_ERROR\");\n  return /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var action,\n        client,\n        clientChannel,\n        datas,\n        state,\n        _args4 = arguments;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            action = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n            _context4.next = 3;\n            return call(createSocket);\n\n          case 3:\n            client = _context4.sent;\n            _context4.next = 6;\n            return call(connectSocekt, client, connectType, action, buffers.expanding(500));\n\n          case 6:\n            clientChannel = _context4.sent;\n            _context4.prev = 7;\n\n          case 8:\n            if (!true) {\n              _context4.next = 21;\n              break;\n            }\n\n            _context4.next = 11;\n            return flush(clientChannel);\n\n          case 11:\n            datas = _context4.sent;\n            _context4.next = 14;\n            return select();\n\n          case 14:\n            state = _context4.sent;\n\n            if (!datas.length) {\n              _context4.next = 17;\n              break;\n            }\n\n            return _context4.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var sortedObj, sortedData;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      sortedObj = {};\n                      datas.forEach(function (data) {\n                        if (sortedObj[data.code]) {\n                          // 버퍼에 있는 데이터중 시간이 가장 최근인 데이터만 남김\n                          sortedObj[data.code] = sortedObj[data.code].timestamp > data.timestamp ? sortedObj[data.code] : data;\n                        } else {\n                          sortedObj[data.code] = data; // 새로운 데이터면 그냥 넣음\n                        }\n                      });\n                      sortedData = Object.keys(sortedObj).map(function (data) {\n                        return sortedObj[data];\n                      });\n                      _context3.next = 5;\n                      return put({\n                        type: SUCCESS,\n                        payload: dataMaker(sortedData, state)\n                      });\n\n                    case 5:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })(), \"t0\", 17);\n\n          case 17:\n            _context4.next = 19;\n            return delay(500);\n\n          case 19:\n            _context4.next = 8;\n            break;\n\n          case 21:\n            _context4.next = 27;\n            break;\n\n          case 23:\n            _context4.prev = 23;\n            _context4.t1 = _context4[\"catch\"](7);\n            _context4.next = 27;\n            return put({\n              type: ERROR,\n              payload: _context4.t1\n            });\n\n          case 27:\n            _context4.prev = 27;\n            clientChannel.close(); // emit(END) 접근시 소켓 닫기\n\n            return _context4.finish(27);\n\n          case 30:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[7, 23, 27, 30]]);\n  });\n};\n\nvar reducerUtils = {\n  success: function success(state, payload, key) {\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, {\n      data: payload,\n      error: false\n    }));\n  },\n  error: function error(state, _error, key) {\n    return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, state[key]), {}, {\n      error: _error\n    })));\n  }\n};\n\nvar requestActions = function requestActions(type, key) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\"),\n      ERROR = \"\".concat(type, \"_ERROR\");\n  return function (state, action) {\n    switch (action.type) {\n      case SUCCESS:\n        return reducerUtils.success(state, action.payload, key);\n\n      case ERROR:\n        return reducerUtils.error(state, action.payload, key);\n\n      default:\n        return state;\n    }\n  };\n};\n\nvar requestInitActions = function requestInitActions(type, key) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\"),\n      ERROR = \"\".concat(type, \"_ERROR\");\n  return function (state, action) {\n    switch (action.type) {\n      case SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n          candleDay: {\n            data: action.payload,\n            error: false\n          }\n        }, key, {\n          data: action.payload,\n          error: false\n        }));\n\n      case ERROR:\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n          candleDay: _objectSpread(_objectSpread({}, state.candleDay), {}, {\n            error: action.payload\n          })\n        }, key, _objectSpread(_objectSpread({}, state[key]), {}, {\n          error: action.payload\n        })));\n\n      default:\n        return state;\n    }\n  };\n};\n\nvar changeOptionActions = function changeOptionActions(type, key) {\n  var SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  return function (state, action) {\n    switch (action.type) {\n      case SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, action.payload));\n\n      default:\n        return state;\n    }\n  };\n};\n\nexport { createRequestSaga, createConnectSocketThunk, createConnectSocketThrottleThunk, createConnectSocketSaga, createChangeOptionSaga, requestActions, requestInitActions, changeOptionActions };","map":{"version":3,"sources":["/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/src/Lib/asyncUtil.js"],"names":["w3cwebsocket","W3CWebSocket","call","put","select","flush","delay","startLoading","finishLoading","throttle","buffers","eventChannel","END","encoding","createRequestSaga","type","api","dataMaker","SUCCESS","ERROR","action","payload","res","state","data","createChangeOptionSaga","createConnectSocketThunk","connectType","dispatch","getState","client","binaryType","onopen","send","JSON","stringify","ticket","codes","onmessage","evt","enc","TextDecoder","arr","Uint8Array","parse","decode","onerror","e","createConnectSocketThrottleThunk","throttleDispatch","createSocket","connectSocekt","socket","buffer","emit","unsubscribe","close","none","createConnectSocketSaga","expanding","clientChannel","datas","length","sortedObj","forEach","code","timestamp","sortedData","Object","keys","map","reducerUtils","success","key","error","requestActions","requestInitActions","candleDay","changeOptionActions"],"mappings":"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","sourcesContent":["import { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { call, put, select, flush, delay } from \"redux-saga/effects\";\nimport { startLoading, finishLoading } from \"../Reducer/loadingReducer\";\nimport { throttle } from \"lodash\";\nimport { buffers, eventChannel, END } from \"redux-saga\";\nimport encoding from \"text-encoding\";\n\n// 캔들용 사가\nconst createRequestSaga = (type, api, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  return function* (action = {}) {\n    yield put(startLoading(type));\n    try {\n      const res = yield call(api, action.payload);\n      const state = yield select();\n\n      yield put({ type: SUCCESS, payload: dataMaker(res.data, state) });\n      yield put(finishLoading(type));\n    } catch (e) {\n      yield put({ type: ERROR, payload: e });\n      yield put(finishLoading(type));\n      throw e;\n    }\n  };\n};\n\n// 선택 옵션 변경용 사가\nconst createChangeOptionSaga = (type) => {\n  const SUCCESS = `${type}_SUCCESS`;\n\n  return function* (action = {}) {\n    yield put({ type: SUCCESS, payload: action.payload });\n  };\n};\n\n// 웹소켓 연결용 Thunk\nconst createConnectSocketThunk = (type, connectType, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  return (action = {}) => (dispatch, getState) => {\n    const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n    client.binaryType = \"arraybuffer\";\n\n    client.onopen = () => {\n      client.send(\n        JSON.stringify([\n          { ticket: \"downbit-clone\" },\n          { type: connectType, codes: action.payload },\n        ])\n      );\n    };\n\n    client.onmessage = (evt) => {\n      const enc = new encoding.TextDecoder(\"utf-8\");\n      const arr = new Uint8Array(evt.data);\n      const data = JSON.parse(enc.decode(arr));\n      const state = getState();\n\n      dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\n    };\n\n    client.onerror = (e) => {\n      dispatch({ type: ERROR, payload: e });\n    };\n  };\n};\n\n// 웹소켓 연결용 Thunk\nconst createConnectSocketThrottleThunk = (type, connectType, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n  const throttleDispatch = throttle((dispatch, state, data) => {\n    dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\n  }, 500);\n\n  return (action = {}) => (dispatch, getState) => {\n    const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n    client.binaryType = \"arraybuffer\";\n\n    client.onopen = () => {\n      client.send(\n        JSON.stringify([\n          { ticket: \"downbit-clone\" },\n          { type: connectType, codes: action.payload },\n        ])\n      );\n    };\n\n    client.onmessage = (evt) => {\n      const enc = new encoding.TextDecoder(\"utf-8\");\n      const arr = new Uint8Array(evt.data);\n      const data = JSON.parse(enc.decode(arr));\n      const state = getState();\n\n      // dispatch({ type: SUCCESS, payload: dataMaker(data, state) });\n      throttleDispatch(dispatch, state, data);\n    };\n\n    client.onerror = (e) => {\n      dispatch({ type: ERROR, payload: e });\n    };\n  };\n};\n\n// 소켓 만들기\nconst createSocket = () => {\n  const client = new W3CWebSocket(\"wss://api.upbit.com/websocket/v1\");\n  client.binaryType = \"arraybuffer\";\n\n  return client;\n};\n\n// 소켓 연결용\nconst connectSocekt = (socket, connectType, action, buffer) => {\n  return eventChannel((emit) => {\n    socket.onopen = () => {\n      socket.send(\n        JSON.stringify([\n          { ticket: \"downbit-clone\" },\n          { type: connectType, codes: action.payload },\n        ])\n      );\n    };\n\n    socket.onmessage = (evt) => {\n      const enc = new encoding.TextDecoder(\"utf-8\");\n      // const arr = new Uint8Array(evt.data);\n      const data = JSON.parse(enc.decode(evt.data));\n\n      emit(data);\n    };\n\n    socket.onerror = (evt) => {\n      emit(evt);\n      emit(END);\n    };\n\n    const unsubscribe = () => {\n      socket.close();\n    };\n\n    return unsubscribe;\n  }, buffer || buffers.none());\n};\n\n// 웹소켓 연결용 사가\nconst createConnectSocketSaga = (type, connectType, dataMaker) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  return function* (action = {}) {\n    const client = yield call(createSocket);\n    const clientChannel = yield call(\n      connectSocekt,\n      client,\n      connectType,\n      action,\n      buffers.expanding(500)\n    );\n\n    try {\n      while (true) {\n        const datas = yield flush(clientChannel); // 버퍼 데이터 가져오기\n        const state = yield select();\n\n        if (datas.length) {\n          const sortedObj = {};\n          datas.forEach((data) => {\n            if (sortedObj[data.code]) {\n              // 버퍼에 있는 데이터중 시간이 가장 최근인 데이터만 남김\n              sortedObj[data.code] =\n                sortedObj[data.code].timestamp > data.timestamp\n                  ? sortedObj[data.code]\n                  : data;\n            } else {\n              sortedObj[data.code] = data; // 새로운 데이터면 그냥 넣음\n            }\n          });\n\n          const sortedData = Object.keys(sortedObj).map(\n            (data) => sortedObj[data]\n          );\n\n          yield put({ type: SUCCESS, payload: dataMaker(sortedData, state) });\n        }\n        yield delay(500); // 500ms 동안 대기\n      }\n    } catch (e) {\n      yield put({ type: ERROR, payload: e });\n    } finally {\n      clientChannel.close(); // emit(END) 접근시 소켓 닫기\n    }\n  };\n};\n\nconst reducerUtils = {\n  success: (state, payload, key) => {\n    return {\n      ...state,\n      [key]: {\n        data: payload,\n        error: false,\n      },\n    };\n  },\n  error: (state, error, key) => ({\n    ...state,\n    [key]: {\n      ...state[key],\n      error: error,\n    },\n  }),\n};\n\nconst requestActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case SUCCESS:\n        return reducerUtils.success(state, action.payload, key);\n      case ERROR:\n        return reducerUtils.error(state, action.payload, key);\n      default:\n        return state;\n    }\n  };\n};\n\nconst requestInitActions = (type, key) => {\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\n  return (state, action) => {\n    switch (action.type) {\n      case SUCCESS:\n        return {\n          ...state,\n          candleDay: {\n            data: action.payload,\n            error: false,\n          },\n          [key]: {\n            data: action.payload,\n            error: false,\n          },\n        };\n      case ERROR:\n        return {\n          ...state,\n          candleDay: {\n            ...state.candleDay,\n            error: action.payload,\n          },\n          [key]: {\n            ...state[key],\n            error: action.payload,\n          },\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nconst changeOptionActions = (type, key) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  return (state, action) => {\n    switch (action.type) {\n      case SUCCESS:\n        return {\n          ...state,\n          [key]: action.payload,\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nexport {\n  createRequestSaga,\n  createConnectSocketThunk,\n  createConnectSocketThrottleThunk,\n  createConnectSocketSaga,\n  createChangeOptionSaga,\n  requestActions,\n  requestInitActions,\n  changeOptionActions,\n};\n"]},"metadata":{},"sourceType":"module"}