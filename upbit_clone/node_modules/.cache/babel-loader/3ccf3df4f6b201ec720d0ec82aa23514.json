{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDefined, isNotDefined, mapObject } from \"@react-financial-charts/core\";\nexport function getValueFromOverride(override, index, key, defaultValue) {\n  if (isDefined(override) && override.index === index) {\n    return override[key];\n  }\n\n  return defaultValue;\n}\nexport function terminate() {\n  // @ts-ignore\n  this.setState({\n    current: null,\n    override: null\n  });\n}\nexport function saveNodeType(type) {\n  var _this = this;\n\n  return function (node) {\n    // @ts-ignore\n    if (isDefined(_this.nodes)) {\n      // @ts-ignore\n      if (isNotDefined(node) && isDefined(_this.nodes[type])) {\n        // @ts-ignore\n        delete _this.nodes[type];\n      } else {\n        // @ts-ignore\n        _this.nodes[type] = node;\n      }\n    } else {\n      // @ts-ignore\n      _this.nodes = [];\n    }\n  };\n}\nexport function isHoverForInteractiveType(interactiveType) {\n  return function (moreProps) {\n    // this has to be function as it is bound to this\n    // @ts-ignore\n    if (isDefined(this.nodes)) {\n      // @ts-ignore\n      var selecedNodes = this.nodes.map(function (node) {\n        return node.isHover(moreProps);\n      }); // @ts-ignore\n\n      var interactive = this.props[interactiveType].map(function (t, idx) {\n        return Object.assign(Object.assign({}, t), {\n          selected: selecedNodes[idx]\n        });\n      });\n      return interactive;\n    }\n  };\n}\nexport function isHover(moreProps) {\n  // @ts-ignore\n  var hovering = mapObject(this.nodes, function (node) {\n    return node.isHover(moreProps);\n  }).reduce(function (a, b) {\n    return a || b;\n  });\n  return hovering;\n}\n\nfunction getMouseXY(moreProps, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      ox = _ref2[0],\n      oy = _ref2[1];\n\n  if (Array.isArray(moreProps.mouseXY)) {\n    var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n        x = _moreProps$mouseXY[0],\n        y = _moreProps$mouseXY[1];\n\n    var mouseXY = [x - ox, y - oy];\n    return mouseXY;\n  }\n\n  return moreProps.mouseXY;\n}\n\nexport function getMorePropsForChart(moreProps, chartId) {\n  var chartConfigList = moreProps.chartConfig;\n  var chartConfig = chartConfigList.find(function (each) {\n    return each.id === chartId;\n  });\n  var origin = chartConfig.origin;\n  var mouseXY = getMouseXY(moreProps, origin);\n  return Object.assign(Object.assign({}, moreProps), {\n    chartConfig: chartConfig,\n    mouseXY: mouseXY\n  });\n}\nexport function getSelected(interactives) {\n  var selected = interactives.map(function (each) {\n    var objects = each.objects.filter(function (obj) {\n      return obj.selected;\n    });\n    return Object.assign(Object.assign({}, each), {\n      objects: objects\n    });\n  }).filter(function (each) {\n    return each.objects.length > 0;\n  });\n  return selected;\n}","map":null,"metadata":{},"sourceType":"module"}