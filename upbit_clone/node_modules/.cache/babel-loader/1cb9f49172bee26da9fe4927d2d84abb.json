{"ast":null,"code":"// copied from https://github.com/d3fc/d3fc-rebind/blob/master/src/rebind.js\nfunction createReboundMethod(target, source, name) {\n  var method = source[name];\n\n  if (typeof method !== \"function\") {\n    throw new Error(\"Attempt to rebind \".concat(name, \" which isn't a function on the source object\"));\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var value = method.apply(source, args);\n    return value === source ? target : value;\n  };\n}\n\nexport default function rebind(target, source) {\n  for (var _len2 = arguments.length, names = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    names[_key2 - 2] = arguments[_key2];\n  }\n\n  for (var _i = 0, _names = names; _i < _names.length; _i++) {\n    var name = _names[_i];\n    target[name] = createReboundMethod(target, source, name);\n  }\n\n  return target;\n}","map":null,"metadata":{},"sourceType":"module"}