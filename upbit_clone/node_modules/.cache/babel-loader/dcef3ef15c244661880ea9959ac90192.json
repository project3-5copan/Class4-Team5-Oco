{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as PropTypes from \"prop-types\";\nimport { GenericComponent } from \"./GenericComponent\";\nimport { isDefined } from \"./utils\";\nvar ALWAYS_TRUE_TYPES = [\"drag\", \"dragend\"];\nexport var GenericChartComponent = /*#__PURE__*/function (_GenericComponent) {\n  _inherits(GenericChartComponent, _GenericComponent);\n\n  var _super = _createSuper(GenericChartComponent);\n\n  function GenericChartComponent(props, context) {\n    var _this;\n\n    _classCallCheck(this, GenericChartComponent);\n\n    _this = _super.call(this, props, context);\n    _this.preCanvasDraw = _this.preCanvasDraw.bind(_assertThisInitialized(_this));\n    _this.postCanvasDraw = _this.postCanvasDraw.bind(_assertThisInitialized(_this));\n    _this.shouldTypeProceed = _this.shouldTypeProceed.bind(_assertThisInitialized(_this));\n    _this.preEvaluate = _this.preEvaluate.bind(_assertThisInitialized(_this));\n    _this.updateMoreProps = _this.updateMoreProps.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(GenericChartComponent, [{\n    key: \"preCanvasDraw\",\n    value: function preCanvasDraw(ctx, moreProps) {\n      _get(_getPrototypeOf(GenericChartComponent.prototype), \"preCanvasDraw\", this).call(this, ctx, moreProps);\n\n      ctx.save();\n      var _this$context = this.context,\n          margin = _this$context.margin,\n          ratio = _this$context.ratio;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height,\n          origin = _moreProps$chartConfi.origin;\n      var canvasOriginX = 0.5 * ratio + origin[0] + margin.left;\n      var canvasOriginY = 0.5 * ratio + origin[1] + margin.top;\n      var _this$props = this.props,\n          clip = _this$props.clip,\n          edgeClip = _this$props.edgeClip;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(ratio, ratio);\n\n      if (edgeClip) {\n        ctx.beginPath();\n        ctx.rect(-1, canvasOriginY - 10, width + margin.left + margin.right + 1, height + 20);\n        ctx.clip();\n      }\n\n      ctx.translate(canvasOriginX, canvasOriginY);\n\n      if (clip) {\n        ctx.beginPath();\n        ctx.rect(-1, -1, width + 1, height + 1);\n        ctx.clip();\n      }\n    }\n  }, {\n    key: \"postCanvasDraw\",\n    value: function postCanvasDraw(ctx, moreProps) {\n      _get(_getPrototypeOf(GenericChartComponent.prototype), \"postCanvasDraw\", this).call(this, ctx, moreProps);\n\n      ctx.restore();\n    }\n  }, {\n    key: \"updateMoreProps\",\n    value: function updateMoreProps(moreProps) {\n      _get(_getPrototypeOf(GenericChartComponent.prototype), \"updateMoreProps\", this).call(this, moreProps);\n\n      var chartConfigList = moreProps.chartConfig;\n\n      if (chartConfigList && Array.isArray(chartConfigList)) {\n        var chartId = this.context.chartId;\n        var chartConfig = chartConfigList.find(function (each) {\n          return each.id === chartId;\n        });\n        this.moreProps.chartConfig = chartConfig;\n      }\n\n      if (isDefined(this.moreProps.chartConfig)) {\n        var _this$moreProps$chart = _slicedToArray(this.moreProps.chartConfig.origin, 2),\n            ox = _this$moreProps$chart[0],\n            oy = _this$moreProps$chart[1];\n\n        if (isDefined(moreProps.mouseXY)) {\n          var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n              x = _moreProps$mouseXY[0],\n              y = _moreProps$mouseXY[1];\n\n          this.moreProps.mouseXY = [x - ox, y - oy];\n        }\n\n        if (isDefined(moreProps.startPos)) {\n          var _moreProps$startPos = _slicedToArray(moreProps.startPos, 2),\n              _x = _moreProps$startPos[0],\n              _y = _moreProps$startPos[1];\n\n          this.moreProps.startPos = [_x - ox, _y - oy];\n        }\n      }\n    }\n  }, {\n    key: \"preEvaluate\",\n    value: function preEvaluate()\n    /* type, moreProps */\n    {///\n    }\n  }, {\n    key: \"shouldTypeProceed\",\n    value: function shouldTypeProceed(type, moreProps) {\n      if ((type === \"mousemove\" || type === \"click\") && this.props.disablePan) {\n        return true;\n      }\n\n      if (ALWAYS_TRUE_TYPES.indexOf(type) === -1 && isDefined(moreProps) && isDefined(moreProps.currentCharts)) {\n        return moreProps.currentCharts.indexOf(this.context.chartId) > -1;\n      }\n\n      return true;\n    }\n  }]);\n\n  return GenericChartComponent;\n}(GenericComponent);\nGenericChartComponent.defaultProps = GenericComponent.defaultProps;\nGenericChartComponent.contextTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  getCanvasContexts: PropTypes.func,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  plotData: PropTypes.array.isRequired,\n  fullData: PropTypes.array.isRequired,\n  chartConfig: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  morePropsDecorator: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func.isRequired,\n  amIOnTop: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  setCursorClass: PropTypes.func.isRequired,\n  canvasOriginX: PropTypes.number,\n  canvasOriginY: PropTypes.number,\n  ratio: PropTypes.number.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}