{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\n/**\n * Draws a circle at the current x location of radius `r`.\n */\n\nexport var CurrentCoordinate = /*#__PURE__*/function (_React$Component) {\n  _inherits(CurrentCoordinate, _React$Component);\n\n  var _super = _createSuper(CurrentCoordinate);\n\n  function CurrentCoordinate() {\n    var _this;\n\n    _classCallCheck(this, CurrentCoordinate);\n\n    _this = _super.apply(this, arguments);\n\n    _this.drawOnCanvas = function (ctx, moreProps) {\n      var circle = _this.getCircle(moreProps);\n\n      if (circle === undefined) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          fillStyle = _this$props.fillStyle,\n          r = _this$props.r,\n          strokeStyle = _this$props.strokeStyle;\n      var fillColor = fillStyle instanceof Function ? fillStyle(moreProps.currentItem) : fillStyle;\n\n      if (fillColor !== undefined) {\n        ctx.fillStyle = fillColor;\n      }\n\n      var strokeColor = strokeStyle instanceof Function ? strokeStyle(moreProps.currentItem) : strokeStyle;\n\n      if (strokeColor !== undefined) {\n        ctx.strokeStyle = strokeColor;\n      }\n\n      ctx.beginPath();\n      ctx.arc(circle.x, circle.y, r, 0, 2 * Math.PI, false);\n      ctx.fill();\n\n      if (strokeColor !== undefined) {\n        ctx.stroke();\n      }\n    };\n\n    _this.getCircle = function (moreProps) {\n      var show = moreProps.show,\n          xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          currentItem = moreProps.currentItem,\n          xAccessor = moreProps.xAccessor;\n\n      if (!show || currentItem === undefined) {\n        return undefined;\n      }\n\n      var yAccessor = _this.props.yAccessor;\n      var xValue = xAccessor(currentItem);\n      var yValue = yAccessor(currentItem);\n\n      if (yValue === undefined) {\n        return undefined;\n      }\n\n      var x = Math.round(xScale(xValue));\n      var y = Math.round(yScale(yValue));\n      return {\n        x: x,\n        y: y\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CurrentCoordinate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GenericChartComponent, {\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: getMouseCanvas,\n        drawOn: [\"mousemove\", \"pan\"]\n      });\n    }\n  }]);\n\n  return CurrentCoordinate;\n}(React.Component);\nCurrentCoordinate.defaultProps = {\n  fillStyle: \"#2196f3\",\n  r: 3\n};","map":null,"metadata":{},"sourceType":"module"}