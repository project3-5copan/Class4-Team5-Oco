{"ast":null,"code":"export var getClosestItemIndexes = function getClosestItemIndexes(array, value, accessor) {\n  var lo = 0;\n  var hi = array.length - 1;\n\n  while (hi - lo > 1) {\n    var mid = Math.round((lo + hi) / 2);\n    var itemAtMid = array[mid];\n    var valueAtMid = accessor(itemAtMid);\n\n    if (valueAtMid <= value) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  var lowItemValue = accessor(array[lo]);\n  var highItemValue = accessor(array[hi]); // for Date object === does not work, so using the <= in combination with >=\n  // the same code works for both dates and numbers\n\n  if ((lowItemValue === null || lowItemValue === void 0 ? void 0 : lowItemValue.valueOf()) === (value === null || value === void 0 ? void 0 : value.valueOf())) {\n    hi = lo;\n  }\n\n  if ((highItemValue === null || highItemValue === void 0 ? void 0 : highItemValue.valueOf()) === (value === null || value === void 0 ? void 0 : value.valueOf())) {\n    lo = hi;\n  }\n\n  if (lowItemValue < value && highItemValue < value) {\n    lo = hi;\n  }\n\n  if (lowItemValue > value && highItemValue > value) {\n    hi = lo;\n  }\n\n  return {\n    left: lo,\n    right: hi\n  };\n};\nexport var getClosestItem = function getClosestItem(array, value, accessor) {\n  var _getClosestItemIndexe = getClosestItemIndexes(array, value, accessor),\n      left = _getClosestItemIndexe.left,\n      right = _getClosestItemIndexe.right;\n\n  if (left === right) {\n    return array[left];\n  }\n\n  var leftItem = accessor(array[left]);\n  var rightItem = accessor(array[right]);\n  var closest = Math.abs(leftItem.valueOf() - value.valueOf()) < Math.abs(rightItem.valueOf() - value.valueOf()) ? array[left] : array[right];\n  return closest;\n};","map":null,"metadata":{},"sourceType":"module"}