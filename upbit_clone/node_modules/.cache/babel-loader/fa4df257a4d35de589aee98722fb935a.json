{"ast":null,"code":"import { identity, merge, slidingWindow } from \"../utils\";\nexport default function () {\n  var windowSize = 1;\n  var accumulator = identity;\n  var mergeAs = identity;\n\n  function algorithm(data) {\n    var defaultAlgorithm = slidingWindow().windowSize(windowSize).accumulator(accumulator);\n    var calculator = merge().algorithm(defaultAlgorithm).merge(mergeAs);\n    var newData = calculator(data);\n    return newData;\n  }\n\n  algorithm.accumulator = function (newAccumulator) {\n    if (newAccumulator === undefined) {\n      return accumulator;\n    }\n\n    accumulator = newAccumulator;\n    return algorithm;\n  };\n\n  algorithm.windowSize = function (newWindowSize) {\n    if (newWindowSize === undefined) {\n      return windowSize;\n    }\n\n    windowSize = newWindowSize;\n    return algorithm;\n  };\n\n  algorithm.merge = function (newMerge) {\n    if (newMerge === undefined) {\n      return mergeAs;\n    }\n\n    mergeAs = newMerge;\n    return algorithm;\n  };\n\n  return algorithm;\n}","map":null,"metadata":{},"sourceType":"module"}