{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { isNotDefined, getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\n\nvar defaultCustomX = function defaultCustomX(props, moreProps) {\n  var xScale = moreProps.xScale,\n      xAccessor = moreProps.xAccessor,\n      currentItem = moreProps.currentItem,\n      mouseXY = moreProps.mouseXY;\n  var snapX = props.snapX;\n  var x = snapX ? xScale(xAccessor(currentItem)) : mouseXY[0];\n  var displayXAccessor = moreProps.displayXAccessor;\n  var displayFormat = props.displayFormat;\n  var coordinate = snapX ? displayFormat(displayXAccessor(currentItem)) : displayFormat(xScale.invert(x));\n  return {\n    x: x,\n    coordinate: coordinate\n  };\n};\n\nexport var MouseCoordinateX = /*#__PURE__*/function (_React$Component) {\n  _inherits(MouseCoordinateX, _React$Component);\n\n  var _super = _createSuper(MouseCoordinateX);\n\n  function MouseCoordinateX() {\n    var _this;\n\n    _classCallCheck(this, MouseCoordinateX);\n\n    _this = _super.apply(this, arguments);\n\n    _this.drawOnCanvas = function (ctx, moreProps) {\n      var props = _this.helper(_this.props, moreProps);\n\n      if (props === null) {\n        return;\n      }\n\n      drawOnCanvas(ctx, props);\n    };\n\n    _this.helper = function (props, moreProps) {\n      var show = moreProps.show,\n          currentItem = moreProps.currentItem,\n          height = moreProps.chartConfig.height;\n\n      if (isNotDefined(currentItem)) {\n        return null;\n      }\n\n      var customX = props.customX,\n          orient = props.orient,\n          at = props.at,\n          rectRadius = props.rectRadius,\n          rectWidth = props.rectWidth,\n          rectHeight = props.rectHeight,\n          stroke = props.stroke,\n          strokeOpacity = props.strokeOpacity,\n          strokeWidth = props.strokeWidth;\n      var fill = props.fill,\n          opacity = props.opacity,\n          fitToText = props.fitToText,\n          fontFamily = props.fontFamily,\n          fontSize = props.fontSize,\n          textFill = props.textFill;\n      var edgeAt = at === \"bottom\" ? height : 0;\n\n      var _customX = customX(props, moreProps),\n          x = _customX.x,\n          coordinate = _customX.coordinate;\n\n      var type = \"vertical\";\n      var y1 = 0;\n      var y2 = height;\n      var hideLine = true;\n      var coordinateProps = {\n        coordinate: coordinate,\n        fitToText: fitToText,\n        show: show,\n        type: type,\n        orient: orient,\n        edgeAt: edgeAt,\n        hideLine: hideLine,\n        fill: fill,\n        opacity: opacity,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        textFill: textFill,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: strokeWidth,\n        rectWidth: rectWidth,\n        rectHeight: rectHeight,\n        rectRadius: rectRadius,\n        arrowWidth: 0,\n        x1: x,\n        x2: x,\n        y1: y1,\n        y2: y2\n      };\n      return coordinateProps;\n    };\n\n    return _this;\n  }\n\n  _createClass(MouseCoordinateX, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GenericChartComponent, {\n        clip: false,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: getMouseCanvas,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return MouseCoordinateX;\n}(React.Component);\nMouseCoordinateX.defaultProps = {\n  at: \"bottom\",\n  customX: defaultCustomX,\n  fill: \"#4C525E\",\n  fitToText: true,\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 13,\n  opacity: 1,\n  orient: \"bottom\",\n  rectWidth: 80,\n  rectHeight: 20,\n  snapX: true,\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  textFill: \"#FFFFFF\",\n  yAxisPad: 0\n};","map":null,"metadata":{},"sourceType":"module"}