{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { d3Window, first, getTouchProps, last, MOUSEMOVE, mousePosition, MOUSEUP, sign, TOUCHEND, TOUCHMOVE, touchPosition } from \"@react-financial-charts/core\";\nimport { mean } from \"d3-array\";\nimport { event as d3Event, mouse, select, touches } from \"d3-selection\";\nimport * as React from \"react\";\nexport var AxisZoomCapture = /*#__PURE__*/function (_React$Component) {\n  _inherits(AxisZoomCapture, _React$Component);\n\n  var _super = _createSuper(AxisZoomCapture);\n\n  function AxisZoomCapture(props) {\n    var _this;\n\n    _classCallCheck(this, AxisZoomCapture);\n\n    _this = _super.call(this, props);\n    _this.ref = React.createRef();\n    _this.mouseInteraction = false;\n    _this.clicked = false;\n    _this.dragHappened = false;\n\n    _this.handleDragEnd = function () {\n      var container = _this.ref.current;\n\n      if (container === null) {\n        return;\n      }\n\n      if (!_this.dragHappened) {\n        if (_this.clicked) {\n          var e = d3Event;\n          var mouseXY = _this.mouseInteraction ? mouse(container) : touches(container)[0];\n          var onDoubleClick = _this.props.onDoubleClick;\n\n          if (onDoubleClick !== undefined) {\n            onDoubleClick(e, mouseXY);\n          }\n        } else {\n          _this.clicked = true;\n          setTimeout(function () {\n            _this.clicked = false;\n          }, 300);\n        }\n      }\n\n      select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null).on(TOUCHMOVE, null).on(TOUCHEND, null);\n\n      _this.setState({\n        startPosition: null\n      });\n    };\n\n    _this.handleDrag = function () {\n      var container = _this.ref.current;\n\n      if (container === null) {\n        return;\n      }\n\n      _this.dragHappened = true;\n      var _this$props = _this.props,\n          getMouseDelta = _this$props.getMouseDelta,\n          _this$props$inverted = _this$props.inverted,\n          inverted = _this$props$inverted === void 0 ? true : _this$props$inverted;\n      var startPosition = _this.state.startPosition;\n\n      if (startPosition !== null) {\n        var startScale = startPosition.startScale;\n        var startXY = startPosition.startXY;\n        var mouseXY = _this.mouseInteraction ? mouse(container) : touches(container)[0];\n        var diff = getMouseDelta(startXY, mouseXY);\n        var center = mean(startScale.range());\n\n        if (center === undefined) {\n          return;\n        }\n\n        var tempRange = startScale.range().map(function (d) {\n          return inverted ? d - sign(d - center) * diff : d + sign(d - center) * diff;\n        });\n        var newDomain = tempRange.map(startScale.invert);\n\n        if (sign(last(startScale.range()) - first(startScale.range())) === sign(last(tempRange) - first(tempRange))) {\n          var axisZoomCallback = _this.props.axisZoomCallback;\n\n          if (axisZoomCallback !== undefined) {\n            axisZoomCallback(newDomain);\n          }\n        }\n      }\n    };\n\n    _this.handleDragStartTouch = function (event) {\n      var container = _this.ref.current;\n\n      if (container === null) {\n        return;\n      }\n\n      _this.mouseInteraction = false;\n      _this.dragHappened = false;\n      var _this$props2 = _this.props,\n          getScale = _this$props2.getScale,\n          getMoreProps = _this$props2.getMoreProps;\n      var allProps = getMoreProps();\n      var startScale = getScale(allProps);\n\n      if (event.touches.length === 1 && startScale.invert !== undefined) {\n        select(d3Window(container)).on(TOUCHMOVE, _this.handleDrag).on(TOUCHEND, _this.handleDragEnd);\n        var startXY = touchPosition(getTouchProps(event.touches[0]), event);\n\n        _this.setState({\n          startPosition: {\n            startScale: startScale,\n            startXY: startXY\n          }\n        });\n      }\n    };\n\n    _this.handleDragStartMouse = function (event) {\n      event.preventDefault();\n      var container = _this.ref.current;\n\n      if (container === null) {\n        return;\n      }\n\n      _this.mouseInteraction = true;\n      _this.dragHappened = false;\n      var _this$props3 = _this.props,\n          getScale = _this$props3.getScale,\n          getMoreProps = _this$props3.getMoreProps;\n      var allProps = getMoreProps();\n      var startScale = getScale(allProps);\n\n      if (startScale.invert !== undefined) {\n        select(d3Window(container)).on(MOUSEMOVE, _this.handleDrag, false).on(MOUSEUP, _this.handleDragEnd, false);\n        var startXY = mousePosition(event);\n\n        _this.setState({\n          startPosition: {\n            startXY: startXY,\n            startScale: startScale\n          }\n        });\n      }\n    };\n\n    _this.handleRightClick = function (event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var container = _this.ref.current;\n\n      if (container === null) {\n        return;\n      }\n\n      var onContextMenu = _this.props.onContextMenu;\n\n      if (onContextMenu === undefined) {\n        return;\n      }\n\n      var defaultRect = container.getBoundingClientRect();\n      var mouseXY = mousePosition(event, defaultRect);\n      select(d3Window(container)).on(MOUSEMOVE, null).on(MOUSEUP, null);\n\n      _this.setState({\n        startPosition: null\n      });\n\n      onContextMenu(event, mouseXY);\n    };\n\n    _this.state = {\n      startPosition: null\n    };\n    return _this;\n  }\n\n  _createClass(AxisZoomCapture, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          bg = _this$props4.bg,\n          className = _this$props4.className,\n          zoomCursorClassName = _this$props4.zoomCursorClassName;\n      var cursor = this.state.startPosition !== null ? zoomCursorClassName : \"react-financial-charts-default-cursor\";\n      return React.createElement(\"rect\", {\n        className: \"react-financial-charts-enable-interaction \".concat(cursor, \" \").concat(className),\n        ref: this.ref,\n        x: bg.x,\n        y: bg.y,\n        opacity: 0,\n        height: bg.h,\n        width: bg.w,\n        onContextMenu: this.handleRightClick,\n        onMouseDown: this.handleDragStartMouse,\n        onTouchStart: this.handleDragStartTouch\n      });\n    }\n  }]);\n\n  return AxisZoomCapture;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}