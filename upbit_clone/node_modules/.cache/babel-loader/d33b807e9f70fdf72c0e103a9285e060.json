{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { format } from \"d3-format\";\nimport * as React from \"react\";\nimport { getAxisCanvas, GenericChartComponent, functor } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\nexport var PriceCoordinate = /*#__PURE__*/function (_React$Component) {\n  _inherits(PriceCoordinate, _React$Component);\n\n  var _super = _createSuper(PriceCoordinate);\n\n  function PriceCoordinate() {\n    var _this;\n\n    _classCallCheck(this, PriceCoordinate);\n\n    _this = _super.apply(this, arguments);\n\n    _this.drawOnCanvas = function (ctx, moreProps) {\n      var props = _this.helper(_this.props, moreProps);\n\n      drawOnCanvas(ctx, props);\n    };\n\n    _this.helper = function (props, moreProps) {\n      var yScale = moreProps.chartConfig.yScale,\n          width = moreProps.width;\n\n      var _yScale$domain = yScale.domain(),\n          _yScale$domain2 = _slicedToArray(_yScale$domain, 2),\n          lowerYValue = _yScale$domain2[0],\n          upperYValue = _yScale$domain2[1];\n\n      var price = props.price,\n          stroke = props.stroke,\n          strokeDasharray = props.strokeDasharray,\n          strokeOpacity = props.strokeOpacity,\n          strokeWidth = props.strokeWidth;\n      var orient = props.orient,\n          at = props.at,\n          rectWidth = props.rectWidth,\n          rectHeight = props.rectHeight,\n          displayFormat = props.displayFormat,\n          dx = props.dx;\n      var fill = props.fill,\n          opacity = props.opacity,\n          fontFamily = props.fontFamily,\n          fontSize = props.fontSize,\n          textFill = props.textFill,\n          arrowWidth = props.arrowWidth,\n          lineOpacity = props.lineOpacity,\n          lineStroke = props.lineStroke;\n      var x1 = 0;\n      var x2 = width;\n      var edgeAt = at === \"right\" ? width : 0;\n      var type = \"horizontal\";\n      var y = yScale(price);\n      var show = price <= upperYValue && price >= lowerYValue;\n      var coordinate = displayFormat(yScale.invert(y));\n      var hideLine = false;\n      var coordinateProps = {\n        coordinate: coordinate,\n        show: show,\n        type: type,\n        orient: orient,\n        edgeAt: edgeAt,\n        hideLine: hideLine,\n        lineOpacity: lineOpacity,\n        lineStroke: lineStroke,\n        lineStrokeDasharray: strokeDasharray,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: strokeWidth,\n        fill: functor(fill)(price),\n        textFill: functor(textFill)(price),\n        opacity: opacity,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        rectWidth: rectWidth,\n        rectHeight: rectHeight,\n        arrowWidth: arrowWidth,\n        dx: dx,\n        x1: x1,\n        x2: x2,\n        y1: y,\n        y2: y\n      };\n      return coordinateProps;\n    };\n\n    return _this;\n  }\n\n  _createClass(PriceCoordinate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GenericChartComponent, {\n        clip: false,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return PriceCoordinate;\n}(React.Component);\nPriceCoordinate.defaultProps = {\n  displayFormat: format(\".2f\"),\n  yAxisPad: 0,\n  rectWidth: 50,\n  rectHeight: 20,\n  orient: \"left\",\n  at: \"left\",\n  price: 0,\n  dx: 0,\n  arrowWidth: 0,\n  fill: \"#BAB8b8\",\n  opacity: 1,\n  lineOpacity: 0.2,\n  lineStroke: \"#000000\",\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 13,\n  textFill: \"#FFFFFF\",\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\"\n};","map":null,"metadata":{},"sourceType":"module"}