{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { LineSeries } from \"./LineSeries\";\nimport { StraightLine } from \"./StraightLine\";\nimport { SVGComponent } from \"./SVGComponent\";\n/**\n * The Relative Strength Index (RSI) is a momentum oscillator that measures the speed and change of price movements.\n */\n\nexport var RSISeries = /*#__PURE__*/function (_React$Component) {\n  _inherits(RSISeries, _React$Component);\n\n  var _super = _createSuper(RSISeries);\n\n  function RSISeries() {\n    var _this;\n\n    _classCallCheck(this, RSISeries);\n\n    _this = _super.apply(this, arguments);\n    _this.clipPathId1 = \"rsi-clip-\".concat(String(Math.round(Math.random() * 10000 * 10000)));\n    _this.clipPathId2 = \"rsi-clip-\".concat(String(Math.round(Math.random() * 10000 * 10000)));\n\n    _this.renderClip = function (moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var _this$props = _this.props,\n          overSold = _this$props.overSold,\n          overBought = _this$props.overBought;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width,\n          height = chartConfig.height;\n      return React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: _this.clipPathId1\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(overSold),\n        width: width,\n        height: yScale(overBought) - yScale(overSold)\n      })), React.createElement(\"clipPath\", {\n        id: _this.clipPathId2\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: width,\n        height: yScale(overSold)\n      }), React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(overBought),\n        width: width,\n        height: height - yScale(overBought)\n      })));\n    };\n\n    _this.mainClip = function (ctx, moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var _this$props2 = _this.props,\n          overSold = _this$props2.overSold,\n          overBought = _this$props2.overBought;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width,\n          height = chartConfig.height;\n      ctx.beginPath();\n      ctx.rect(0, 0, width, yScale(overSold));\n      ctx.rect(0, yScale(overBought), width, height - yScale(overBought));\n      ctx.clip();\n    };\n\n    _this.topAndBottomClip = function (ctx, moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var _this$props3 = _this.props,\n          overSold = _this$props3.overSold,\n          overBought = _this$props3.overBought;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width;\n      ctx.beginPath();\n      ctx.rect(0, yScale(overSold), width, yScale(overBought) - yScale(overSold));\n      ctx.clip();\n    };\n\n    return _this;\n  }\n\n  _createClass(RSISeries, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          _this$props4$strokeSt = _this$props4.strokeStyle,\n          strokeStyle = _this$props4$strokeSt === void 0 ? RSISeries.defaultProps.strokeStyle : _this$props4$strokeSt,\n          _this$props4$strokeDa = _this$props4.strokeDasharray,\n          strokeDasharray = _this$props4$strokeDa === void 0 ? RSISeries.defaultProps.strokeDasharray : _this$props4$strokeDa,\n          _this$props4$strokeWi = _this$props4.strokeWidth,\n          strokeWidth = _this$props4$strokeWi === void 0 ? RSISeries.defaultProps.strokeWidth : _this$props4$strokeWi;\n      var yAccessor = this.props.yAccessor;\n      var _this$props5 = this.props,\n          overSold = _this$props5.overSold,\n          middle = _this$props5.middle,\n          overBought = _this$props5.overBought;\n      return React.createElement(\"g\", {\n        className: className\n      }, React.createElement(SVGComponent, null, this.renderClip), React.createElement(StraightLine, {\n        strokeStyle: strokeStyle.top,\n        yValue: overSold,\n        lineDash: strokeDasharray.top,\n        lineWidth: strokeWidth.top\n      }), React.createElement(StraightLine, {\n        strokeStyle: strokeStyle.middle,\n        yValue: middle,\n        lineDash: strokeDasharray.middle,\n        lineWidth: strokeWidth.middle\n      }), React.createElement(StraightLine, {\n        strokeStyle: strokeStyle.bottom,\n        yValue: overBought,\n        lineDash: strokeDasharray.bottom,\n        lineWidth: strokeWidth.bottom\n      }), React.createElement(LineSeries, {\n        canvasClip: this.topAndBottomClip,\n        yAccessor: yAccessor,\n        strokeStyle: strokeStyle.insideThreshold || strokeStyle.line,\n        strokeWidth: strokeWidth.insideThreshold,\n        strokeDasharray: strokeDasharray.line\n      }), React.createElement(LineSeries, {\n        canvasClip: this.mainClip,\n        yAccessor: yAccessor,\n        strokeStyle: strokeStyle.outsideThreshold || strokeStyle.line,\n        strokeWidth: strokeWidth.outsideThreshold,\n        strokeDasharray: strokeDasharray.line\n      }));\n    }\n  }]);\n\n  return RSISeries;\n}(React.Component);\nRSISeries.defaultProps = {\n  className: \"react-financial-charts-rsi-series\",\n  strokeStyle: {\n    line: \"#000000\",\n    top: \"#B8C2CC\",\n    middle: \"#8795A1\",\n    bottom: \"#B8C2CC\",\n    outsideThreshold: \"#b300b3\",\n    insideThreshold: \"#ffccff\"\n  },\n  strokeDasharray: {\n    line: \"Solid\",\n    top: \"ShortDash\",\n    middle: \"ShortDash\",\n    bottom: \"ShortDash\"\n  },\n  strokeWidth: {\n    outsideThreshold: 1,\n    insideThreshold: 1,\n    top: 1,\n    middle: 1,\n    bottom: 1\n  },\n  overSold: 70,\n  middle: 50,\n  overBought: 30\n};","map":null,"metadata":{},"sourceType":"module"}