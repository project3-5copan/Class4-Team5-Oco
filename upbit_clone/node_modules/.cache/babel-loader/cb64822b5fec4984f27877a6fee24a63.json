{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent, isNotDefined } from \"@react-financial-charts/core\";\nimport { drawOnCanvas } from \"./EdgeCoordinateV3\";\nexport var MouseCoordinateY = /*#__PURE__*/function (_React$Component) {\n  _inherits(MouseCoordinateY, _React$Component);\n\n  var _super = _createSuper(MouseCoordinateY);\n\n  function MouseCoordinateY() {\n    var _this;\n\n    _classCallCheck(this, MouseCoordinateY);\n\n    _this = _super.apply(this, arguments);\n\n    _this.drawOnCanvas = function (ctx, moreProps) {\n      var props = _this.helper(_this.props, moreProps);\n\n      if (props === undefined) {\n        return;\n      }\n\n      drawOnCanvas(ctx, props);\n    };\n\n    _this.helper = function (props, moreProps) {\n      var yScale = moreProps.chartConfig.yScale,\n          chartId = moreProps.chartId,\n          currentCharts = moreProps.currentCharts,\n          mouseXY = moreProps.mouseXY,\n          show = moreProps.show;\n\n      if (!show) {\n        return undefined;\n      }\n\n      if (isNotDefined(mouseXY)) {\n        return undefined;\n      }\n\n      if (currentCharts.indexOf(chartId) < 0) {\n        return undefined;\n      }\n\n      var y = mouseXY[1];\n      var displayFormat = props.displayFormat;\n      var coordinate = displayFormat(yScale.invert(y));\n      return getYCoordinate(y, coordinate, props, moreProps);\n    };\n\n    return _this;\n  }\n\n  _createClass(MouseCoordinateY, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GenericChartComponent, {\n        clip: false,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: getMouseCanvas,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return MouseCoordinateY;\n}(React.Component);\nMouseCoordinateY.defaultProps = {\n  arrowWidth: 0,\n  at: \"right\",\n  dx: 0,\n  fill: \"#4C525E\",\n  fitToText: false,\n  fontFamily: \"-apple-system, system-ui, Roboto, 'Helvetica Neue', Ubuntu, sans-serif\",\n  fontSize: 13,\n  opacity: 1,\n  orient: \"right\",\n  rectWidth: 50,\n  rectHeight: 20,\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  textFill: \"#FFFFFF\",\n  yAxisPad: 0\n};\nexport function getYCoordinate(y, coordinate, props, moreProps) {\n  var width = moreProps.width;\n  var orient = props.orient,\n      at = props.at,\n      rectWidth = props.rectWidth,\n      rectHeight = props.rectHeight,\n      dx = props.dx,\n      stroke = props.stroke,\n      strokeOpacity = props.strokeOpacity,\n      strokeWidth = props.strokeWidth;\n  var fill = props.fill,\n      opacity = props.opacity,\n      fitToText = props.fitToText,\n      fontFamily = props.fontFamily,\n      fontSize = props.fontSize,\n      textFill = props.textFill,\n      arrowWidth = props.arrowWidth;\n  var x1 = 0;\n  var x2 = width;\n  var edgeAt = at === \"right\" ? width : 0;\n  var type = \"horizontal\";\n  var hideLine = true;\n  var coordinateProps = {\n    coordinate: coordinate,\n    show: true,\n    fitToText: fitToText,\n    type: type,\n    orient: orient,\n    edgeAt: edgeAt,\n    hideLine: hideLine,\n    fill: fill,\n    opacity: opacity,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    textFill: textFill,\n    stroke: stroke,\n    strokeOpacity: strokeOpacity,\n    strokeWidth: strokeWidth,\n    rectWidth: rectWidth,\n    rectHeight: rectHeight,\n    arrowWidth: arrowWidth,\n    dx: dx,\n    x1: x1,\n    x2: x2,\n    y1: y,\n    y2: y\n  };\n  return coordinateProps;\n}","map":null,"metadata":{},"sourceType":"module"}