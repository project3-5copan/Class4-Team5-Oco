{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { functor } from \"@react-financial-charts/core\";\nimport * as React from \"react\";\nexport var CircleMarker = /*#__PURE__*/function (_React$Component) {\n  _inherits(CircleMarker, _React$Component);\n\n  var _super = _createSuper(CircleMarker);\n\n  function CircleMarker() {\n    _classCallCheck(this, CircleMarker);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CircleMarker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          strokeStyle = _this$props.strokeStyle,\n          strokeWidth = _this$props.strokeWidth,\n          fillStyle = _this$props.fillStyle,\n          point = _this$props.point,\n          r = _this$props.r;\n      var radius = functor(r)(point.datum);\n      return React.createElement(\"circle\", {\n        className: className,\n        cx: point.x,\n        cy: point.y,\n        stroke: strokeStyle,\n        strokeWidth: strokeWidth,\n        fill: fillStyle,\n        r: radius\n      });\n    }\n  }]);\n\n  return CircleMarker;\n}(React.Component);\nCircleMarker.defaultProps = {\n  fillStyle: \"#4682B4\",\n  className: \"react-financial-charts-marker-circle\"\n};\n\nCircleMarker.drawOnCanvas = function (props, point, ctx) {\n  var strokeStyle = props.strokeStyle,\n      fillStyle = props.fillStyle,\n      r = props.r,\n      strokeWidth = props.strokeWidth;\n\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = strokeStyle;\n  }\n\n  if (strokeWidth !== undefined) {\n    ctx.lineWidth = strokeWidth;\n  }\n\n  if (fillStyle !== undefined) {\n    ctx.fillStyle = fillStyle;\n  }\n\n  var datum = point.datum,\n      x = point.x,\n      y = point.y;\n  var radius = functor(r)(datum);\n  ctx.moveTo(x, y);\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n  ctx.fill();\n\n  if (strokeStyle !== undefined) {\n    ctx.stroke();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}