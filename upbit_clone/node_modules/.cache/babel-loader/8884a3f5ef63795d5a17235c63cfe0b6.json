{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { getMouseCanvas, GenericChartComponent } from \"@react-financial-charts/core\";\nexport var ClickableCircle = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClickableCircle, _React$Component);\n\n  var _super = _createSuper(ClickableCircle);\n\n  function ClickableCircle() {\n    var _this;\n\n    _classCallCheck(this, ClickableCircle);\n\n    _this = _super.apply(this, arguments);\n\n    _this.drawOnCanvas = function (ctx, moreProps) {\n      var _this$props = _this.props,\n          strokeStyle = _this$props.strokeStyle,\n          strokeWidth = _this$props.strokeWidth,\n          fillStyle = _this$props.fillStyle,\n          r = _this$props.r;\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = fillStyle;\n      ctx.strokeStyle = strokeStyle;\n\n      var _this$helper = _this.helper(moreProps),\n          _this$helper2 = _slicedToArray(_this$helper, 2),\n          x = _this$helper2[0],\n          y = _this$helper2[1];\n\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.stroke();\n    };\n\n    _this.isHover = function (moreProps) {\n      var mouseXY = moreProps.mouseXY;\n      var r = _this.props.r + 7;\n\n      var _this$helper3 = _this.helper(moreProps),\n          _this$helper4 = _slicedToArray(_this$helper3, 2),\n          x = _this$helper4[0],\n          y = _this$helper4[1];\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mx = _mouseXY[0],\n          my = _mouseXY[1];\n\n      var hover = x - r < mx && mx < x + r && y - r < my && my < y + r;\n      return hover;\n    };\n\n    _this.helper = function (moreProps) {\n      var _this$props2 = _this.props,\n          xyProvider = _this$props2.xyProvider,\n          cx = _this$props2.cx,\n          cy = _this$props2.cy;\n\n      if (xyProvider !== undefined) {\n        return xyProvider(moreProps);\n      }\n\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale;\n      var x = xScale(cx);\n      var y = yScale(cy);\n      return [x, y];\n    };\n\n    return _this;\n  }\n\n  _createClass(ClickableCircle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          interactiveCursorClass = _this$props3.interactiveCursorClass,\n          onDragStart = _this$props3.onDragStart,\n          onDrag = _this$props3.onDrag,\n          onDragComplete = _this$props3.onDragComplete,\n          show = _this$props3.show;\n\n      if (!show) {\n        return null;\n      }\n\n      return React.createElement(GenericChartComponent, {\n        interactiveCursorClass: interactiveCursorClass,\n        selected: true,\n        isHover: this.isHover,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: getMouseCanvas,\n        drawOn: [\"pan\", \"mousemove\", \"drag\"]\n      });\n    }\n  }]);\n\n  return ClickableCircle;\n}(React.Component);\nClickableCircle.defaultProps = {\n  className: \"react-financial-charts-interactive-line-edge\",\n  show: false\n};","map":null,"metadata":{},"sourceType":"module"}