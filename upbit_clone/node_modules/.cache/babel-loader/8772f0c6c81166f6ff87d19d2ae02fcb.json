{"ast":null,"code":"import { path } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\nexport default function () {\n  var options = defaultOptions;\n\n  var calculator = function calculator(data) {\n    var _options = options,\n        basePath = _options.basePath,\n        mainKeys = _options.mainKeys,\n        compareKeys = _options.compareKeys;\n    var base = path(basePath);\n    var first = data[0];\n    var b = base(first);\n    var firsts = {};\n    var compareData = data.map(function (d) {\n      var result = {};\n      mainKeys.forEach(function (key) {\n        if (typeof d[key] === \"object\") {\n          // @ts-ignore\n          result[key] = {};\n          Object.keys(d[key]).forEach(function (subkey) {\n            // @ts-ignore\n            result[key][subkey] = (d[key][subkey] - b) / b;\n          });\n        } else {\n          // @ts-ignore\n          result[key] = (d[key] - b) / b;\n        }\n      });\n      compareKeys.forEach(function (key) {\n        if (d[key] !== undefined && firsts[key] === undefined) {\n          // @ts-ignore\n          firsts[key] = d[key];\n        }\n\n        if (d[key] !== undefined && firsts[key] !== undefined) {\n          // @ts-ignore\n          result[key] = (d[key] - firsts[key]) / firsts[key];\n        }\n      });\n      return result;\n    });\n    return compareData;\n  };\n\n  calculator.options = function (newOptions) {\n    if (newOptions === undefined) {\n      return options;\n    }\n\n    options = Object.assign(Object.assign({}, defaultOptions), newOptions);\n    return calculator;\n  };\n\n  return calculator;\n}","map":null,"metadata":{},"sourceType":"module"}