{"ast":null,"code":"import _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { AreaSeries } from \"./AreaSeries\";\nimport { SVGComponent } from \"./SVGComponent\";\n/**\n * `AlternatingFillAreaSeries` component is similar to a `AreaSeries` but with different colors above and below the base.\n */\n\nexport var AlternatingFillAreaSeries = /*#__PURE__*/function (_React$Component) {\n  _inherits(AlternatingFillAreaSeries, _React$Component);\n\n  var _super = _createSuper(AlternatingFillAreaSeries);\n\n  function AlternatingFillAreaSeries() {\n    var _this;\n\n    _classCallCheck(this, AlternatingFillAreaSeries);\n\n    _this = _super.apply(this, arguments);\n    _this.clipPathId1 = \"alternating-area-clip-\".concat(String(Math.round(Math.random() * 10000 * 10000)));\n    _this.clipPathId2 = \"alternating-area-clip-\".concat(String(Math.round(Math.random() * 10000 * 10000)));\n\n    _this.baseAt = function (yScale) {\n      return yScale(_this.props.baseAt);\n    };\n\n    _this.renderClip = function (moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var baseAt = _this.props.baseAt;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width,\n          height = chartConfig.height;\n      return React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: _this.clipPathId1\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: width,\n        height: yScale(baseAt)\n      })), React.createElement(\"clipPath\", {\n        id: _this.clipPathId2\n      }, React.createElement(\"rect\", {\n        x: 0,\n        y: yScale(baseAt),\n        width: width,\n        height: height - yScale(baseAt)\n      })));\n    };\n\n    _this.bottomClip = function (ctx, moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var baseAt = _this.props.baseAt;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width,\n          height = chartConfig.height;\n      ctx.beginPath();\n      ctx.rect(0, yScale(baseAt), width, height - yScale(baseAt));\n      ctx.clip();\n    };\n\n    _this.topClip = function (ctx, moreProps) {\n      var chartConfig = moreProps.chartConfig;\n      var baseAt = _this.props.baseAt;\n      var yScale = chartConfig.yScale,\n          width = chartConfig.width;\n      ctx.beginPath();\n      ctx.rect(0, 0, width, yScale(baseAt));\n      ctx.clip();\n    };\n\n    return _this;\n  }\n\n  _createClass(AlternatingFillAreaSeries, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          yAccessor = _this$props.yAccessor,\n          curve = _this$props.curve,\n          _this$props$strokeSty = _this$props.strokeStyle,\n          strokeStyle = _this$props$strokeSty === void 0 ? AlternatingFillAreaSeries.defaultProps.strokeStyle : _this$props$strokeSty,\n          _this$props$strokeWid = _this$props.strokeWidth,\n          strokeWidth = _this$props$strokeWid === void 0 ? AlternatingFillAreaSeries.defaultProps.strokeWidth : _this$props$strokeWid,\n          _this$props$strokeDas = _this$props.strokeDasharray,\n          strokeDasharray = _this$props$strokeDas === void 0 ? AlternatingFillAreaSeries.defaultProps.strokeDasharray : _this$props$strokeDas,\n          _this$props$fillStyle = _this$props.fillStyle,\n          fillStyle = _this$props$fillStyle === void 0 ? AlternatingFillAreaSeries.defaultProps.fillStyle : _this$props$fillStyle;\n      return React.createElement(\"g\", {\n        className: className\n      }, React.createElement(SVGComponent, null, this.renderClip), React.createElement(AreaSeries, {\n        canvasClip: this.topClip,\n        yAccessor: yAccessor,\n        curve: curve,\n        baseAt: this.baseAt,\n        fillStyle: fillStyle.top,\n        strokeStyle: strokeStyle.top,\n        strokeDasharray: strokeDasharray.top,\n        strokeWidth: strokeWidth.top\n      }), React.createElement(AreaSeries, {\n        canvasClip: this.bottomClip,\n        yAccessor: yAccessor,\n        curve: curve,\n        baseAt: this.baseAt,\n        fillStyle: fillStyle.bottom,\n        strokeStyle: strokeStyle.bottom,\n        strokeDasharray: strokeDasharray.bottom,\n        strokeWidth: strokeWidth.bottom\n      }));\n    }\n  }]);\n\n  return AlternatingFillAreaSeries;\n}(React.Component);\nAlternatingFillAreaSeries.defaultProps = {\n  className: \"react-financial-charts-alternating-area\",\n  fillStyle: {\n    top: \"rgba(38, 166, 154, 0.1)\",\n    bottom: \"rgba(239, 83, 80, 0.1)\"\n  },\n  strokeStyle: {\n    top: \"#26a69a\",\n    bottom: \"#ef5350\"\n  },\n  strokeWidth: {\n    top: 2,\n    bottom: 2\n  },\n  strokeDasharray: {\n    top: \"Solid\",\n    bottom: \"Solid\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}