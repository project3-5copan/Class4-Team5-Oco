{"ast":null,"code":"import _slicedToArray from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/taehyunpark/Desktop/Work/Class4-Team5-Oco/upbit_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from \"react\";\nimport { isHover, saveNodeType } from \"../utils\";\nimport { ClickableShape, InteractiveYCoordinate } from \"../components\";\nexport var EachInteractiveYCoordinate = /*#__PURE__*/function (_React$Component) {\n  _inherits(EachInteractiveYCoordinate, _React$Component);\n\n  var _super = _createSuper(EachInteractiveYCoordinate);\n\n  function EachInteractiveYCoordinate(props) {\n    var _this;\n\n    _classCallCheck(this, EachInteractiveYCoordinate);\n\n    _this = _super.call(this, props);\n\n    _this.handleCloseIconHover = function (_, moreProps) {\n      if (_this.state.closeIconHover !== moreProps.hovering) {\n        _this.setState({\n          closeIconHover: moreProps.hovering\n        });\n      }\n    };\n\n    _this.handleHover = function (e, moreProps) {\n      if (_this.state.hover !== moreProps.hovering) {\n        _this.setState({\n          hover: moreProps.hovering,\n          closeIconHover: moreProps.hovering ? _this.state.closeIconHover : false\n        });\n      }\n    };\n\n    _this.handleDelete = function (e, moreProps) {\n      var _this$props = _this.props,\n          index = _this$props.index,\n          onDelete = _this$props.onDelete;\n\n      if (onDelete !== undefined) {\n        onDelete(e, index, moreProps);\n      }\n    };\n\n    _this.handleDrag = function (e, moreProps) {\n      var _this$props2 = _this.props,\n          index = _this$props2.index,\n          onDrag = _this$props2.onDrag;\n\n      if (onDrag === undefined) {\n        return;\n      }\n\n      var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY[1],\n          yScale = moreProps.chartConfig.yScale;\n\n      var dy = _this.dragStartPosition.dy;\n      var newYValue = yScale.invert(mouseY - dy);\n      onDrag(e, index, newYValue);\n    };\n\n    _this.handleDragStart = function (_, moreProps) {\n      var yValue = _this.props.yValue;\n      var mouseXY = moreProps.mouseXY;\n      var yScale = moreProps.chartConfig.yScale;\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mouseY = _mouseXY[1];\n\n      var dy = mouseY - yScale(yValue);\n      _this.dragStartPosition = {\n        yValue: yValue,\n        dy: dy\n      };\n    };\n\n    _this.isHover = isHover.bind(_assertThisInitialized(_this));\n    _this.saveNodeType = saveNodeType.bind(_assertThisInitialized(_this));\n    _this.state = {\n      hover: false,\n      closeIconHover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachInteractiveYCoordinate, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          yValue = _this$props3.yValue,\n          bgFill = _this$props3.bgFill,\n          textFill = _this$props3.textFill,\n          fontFamily = _this$props3.fontFamily,\n          fontSize = _this$props3.fontSize,\n          fontWeight = _this$props3.fontWeight,\n          fontStyle = _this$props3.fontStyle,\n          text = _this$props3.text,\n          selected = _this$props3.selected,\n          onDragComplete = _this$props3.onDragComplete,\n          stroke = _this$props3.stroke,\n          strokeDasharray = _this$props3.strokeDasharray,\n          strokeWidth = _this$props3.strokeWidth,\n          edge = _this$props3.edge,\n          textBox = _this$props3.textBox,\n          draggable = _this$props3.draggable;\n      var _this$state = this.state,\n          hover = _this$state.hover,\n          closeIconHover = _this$state.closeIconHover;\n      var hoverHandler = {\n        onHover: this.handleHover,\n        onUnHover: this.handleHover\n      };\n      var dragProps = draggable ? {\n        onDragStart: this.handleDragStart,\n        onDrag: this.handleDrag,\n        onDragComplete: onDragComplete\n      } : {};\n      return React.createElement(\"g\", null, React.createElement(InteractiveYCoordinate, Object.assign({\n        ref: this.saveNodeType(\"priceCoordinate\"),\n        selected: selected && !closeIconHover,\n        hovering: hover || closeIconHover,\n        interactiveCursorClass: \"react-financial-charts-move-cursor\"\n      }, hoverHandler, dragProps, {\n        yValue: yValue,\n        bgFillStyle: bgFill,\n        textFill: textFill,\n        fontFamily: fontFamily,\n        fontStyle: fontStyle,\n        fontWeight: fontWeight,\n        fontSize: fontSize,\n        strokeStyle: stroke,\n        strokeDasharray: strokeDasharray,\n        strokeWidth: strokeWidth,\n        text: text,\n        textBox: textBox,\n        edge: edge\n      })), React.createElement(ClickableShape, {\n        show: true,\n        hovering: closeIconHover,\n        text: text,\n        yValue: yValue,\n        fontFamily: fontFamily,\n        fontStyle: fontStyle,\n        fontWeight: fontWeight,\n        fontSize: fontSize,\n        textBox: textBox,\n        strokeStyle: stroke,\n        onHover: this.handleCloseIconHover,\n        onUnHover: this.handleCloseIconHover,\n        onClick: this.handleDelete\n      }));\n    }\n  }]);\n\n  return EachInteractiveYCoordinate;\n}(React.Component);\nEachInteractiveYCoordinate.defaultProps = {\n  strokeWidth: 1,\n  selected: false,\n  draggable: false\n};","map":null,"metadata":{},"sourceType":"module"}