import * as PropTypes from "prop-types";
import * as React from "react";
export interface ZoomButtonsProps {
    readonly fill: string;
    readonly fillOpacity: number;
    readonly heightFromBase: number;
    readonly onReset?: () => void;
    readonly r: number;
    readonly stroke: string;
    readonly strokeWidth: number;
    readonly textFill: string;
    readonly zoomMultiplier: number;
}
export declare class ZoomButtons extends React.Component<ZoomButtonsProps> {
    static defaultProps: {
        fill: string;
        fillOpacity: number;
        heightFromBase: number;
        r: number;
        stroke: string;
        strokeWidth: number;
        textFill: string;
        zoomMultiplier: number;
    };
    static contextTypes: {
        xScale: PropTypes.Validator<(...args: any[]) => any>;
        chartConfig: PropTypes.Validator<object>;
        plotData: PropTypes.Validator<any[]>;
        xAccessor: PropTypes.Validator<(...args: any[]) => any>;
        xAxisZoom: PropTypes.Validator<(...args: any[]) => any>;
    };
    private interval?;
    render(): JSX.Element;
    private readonly handleZoomIn;
    private readonly handleZoomOut;
    private readonly zoom;
}
