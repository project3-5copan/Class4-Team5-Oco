import * as React from "react";
interface ClickCallbackProps {
    readonly disablePan: boolean;
    readonly onMouseDown?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onClick?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onDoubleClick?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onContextMenu?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onMouseMove?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onPan?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
    readonly onPanEnd?: (e: React.MouseEvent<Element, MouseEvent>, moreProps: any) => void;
}
export declare class ClickCallback extends React.Component<ClickCallbackProps> {
    static defaultProps: {
        disablePan: boolean;
    };
    render(): JSX.Element;
}
export {};
