import * as React from "react";
export interface EachLinearRegressionChannelProps {
    readonly defaultClassName?: string;
    readonly x1Value: any;
    readonly x2Value: any;
    readonly index?: number;
    readonly appearance: {
        readonly stroke: string;
        readonly strokeWidth: number;
        readonly fill: string;
        readonly edgeStrokeWidth: number;
        readonly edgeStroke: string;
        readonly edgeFill: string;
        readonly r: number;
    };
    readonly edgeInteractiveCursor?: string;
    readonly onDrag?: (e: React.MouseEvent, index: number | undefined, x1y1: {
        x1Value: any;
        x2Value: any;
    }) => void;
    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;
    readonly snapTo?: (datum: any) => number;
    readonly interactive: boolean;
    readonly selected: boolean;
    readonly hoverText: {
        readonly enable: boolean;
        readonly fontFamily: string;
        readonly fontSize: number;
        readonly fill: string;
        readonly text: string;
        readonly bgFill: string;
        readonly bgOpacity: number;
        readonly bgWidth: number | string;
        readonly bgHeight: number | string;
        readonly selectedText: string;
    };
}
interface EachLinearRegressionChannelState {
    hover: boolean;
}
export declare class EachLinearRegressionChannel extends React.Component<EachLinearRegressionChannelProps, EachLinearRegressionChannelState> {
    static defaultProps: {
        appearance: {
            stroke: string;
            strokeWidth: number;
            fill: string;
            edgeStrokeWidth: number;
            edgeStroke: string;
            edgeFill: string;
            r: number;
        };
        interactive: boolean;
        selected: boolean;
        hoverText: {
            enable: boolean;
            bgHeight: number;
            bgWidth: number;
            text: string;
            fontFamily: string;
            fontSize: number;
            fill: string;
            bgFill: string;
            bgOpacity: number;
        };
    };
    private isHover;
    private saveNodeType;
    constructor(props: EachLinearRegressionChannelProps);
    render(): JSX.Element;
    private readonly handleHover;
    private readonly handleEdge2Drag;
    private readonly handleEdge1Drag;
}
export declare function getNewXY(moreProps: any, snapTo: any): any[];
export {};
