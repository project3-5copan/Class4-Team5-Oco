import * as React from "react";
export interface EachTextProps {
    readonly index?: number;
    readonly position?: any;
    readonly bgFill: string;
    readonly bgStrokeWidth: number;
    readonly bgStroke?: string;
    readonly textFill: string;
    readonly fontWeight: string;
    readonly fontFamily: string;
    readonly fontStyle: string;
    readonly fontSize: number;
    readonly text: string;
    readonly selected: boolean;
    readonly onDrag?: (e: React.MouseEvent, index: number | undefined, xyValue: number[]) => void;
    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;
    readonly hoverText: {
        readonly enable: boolean;
        readonly fontFamily: string;
        readonly fontSize: number;
        readonly fill: string;
        readonly text: string;
        readonly selectedText: string;
        readonly bgFill: string;
        readonly bgOpacity: number;
        readonly bgWidth: number | string;
        readonly bgHeight: number | string;
    };
}
interface EachTextState {
    hover: boolean;
}
export declare class EachText extends React.Component<EachTextProps, EachTextState> {
    static defaultProps: {
        bgStrokeWidth: number;
        selected: boolean;
        hoverText: {
            enable: boolean;
            bgHeight: string;
            bgWidth: string;
            text: string;
            fontFamily: string;
            fontSize: number;
            fill: string;
            bgFill: string;
            bgOpacity: number;
        };
    };
    private dragStartPosition;
    private isHover;
    private saveNodeType;
    constructor(props: EachTextProps);
    render(): JSX.Element;
    private readonly handleHover;
    private readonly handleDrag;
    private readonly handleDragStart;
}
export {};
