import * as React from "react";
export interface LinearRegressionChannelWithAreaProps {
    readonly x1Value: any;
    readonly x2Value: any;
    readonly type: "SD" | "Raff";
    readonly interactiveCursorClass?: string;
    readonly strokeStyle: string;
    readonly strokeWidth: number;
    readonly fillStyle: string;
    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onHover?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onUnHover?: (e: React.MouseEvent, moreProps: any) => void;
    readonly defaultClassName?: string;
    readonly tolerance: number;
    readonly selected: boolean;
}
export declare class LinearRegressionChannelWithArea extends React.Component<LinearRegressionChannelWithAreaProps> {
    static defaultProps: {
        type: string;
        strokeWidth: number;
        tolerance: number;
        selected: boolean;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly isHover;
}
export declare function edge1Provider(props: any): (moreProps: any) => any[];
export declare function edge2Provider(props: any): (moreProps: any) => any[];
