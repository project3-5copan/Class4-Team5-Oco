import * as React from "react";
export interface ChannelWithAreaProps {
    readonly startXY?: number[];
    readonly endXY?: number[];
    readonly dy?: number;
    readonly interactiveCursorClass?: string;
    readonly strokeStyle: string;
    readonly strokeWidth: number;
    readonly fillStyle: string;
    readonly type: "XLINE" | "RAY" | "LINE";
    readonly onDragStart?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onDrag?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onDragComplete?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onHover?: (e: React.MouseEvent, moreProps: any) => void;
    readonly onUnHover?: (e: React.MouseEvent, moreProps: any) => void;
    readonly defaultClassName?: string;
    readonly tolerance: number;
    readonly selected: boolean;
}
export declare class ChannelWithArea extends React.Component<ChannelWithAreaProps> {
    static defaultProps: {
        type: string;
        strokeWidth: number;
        tolerance: number;
        selected: boolean;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly isHover;
}
