import * as React from "react";
import { OverlayBarSeries } from "./OverlayBarSeries";
import { StraightLine } from "./StraightLine";
/**
 * This indicator consists of three separate indicators
 * known as "bull power" and "bear power", which are derived from a 13-period
 * exponential moving average (EMA). The three indicator help traders determine
 * the trend direction and isolate spots to enter and exit trades.
 */
export class ElderRaySeries extends React.Component {
    constructor() {
        super(...arguments);
        this.yAccessorBullTop = (d) => {
            const { yAccessor } = this.props;
            return yAccessor(d) && (yAccessor(d).bullPower > 0 ? yAccessor(d).bullPower : undefined);
        };
        this.yAccessorBearTop = (d) => {
            const { yAccessor } = this.props;
            return yAccessor(d) && (yAccessor(d).bearPower > 0 ? yAccessor(d).bearPower : undefined);
        };
        this.yAccessorBullBottom = (d) => {
            const { yAccessor } = this.props;
            return yAccessor(d) && (yAccessor(d).bullPower < 0 ? 0 : undefined);
        };
        this.yAccessorBearBottom = (d) => {
            const { yAccessor } = this.props;
            return (yAccessor(d) &&
                (yAccessor(d).bullPower < 0 || yAccessor(d).bullPower * yAccessor(d).bearPower < 0 // bullPower is +ve and bearPower is -ve
                    ? Math.min(0, yAccessor(d).bullPower)
                    : undefined));
        };
        this.yAccessorForBarBase = (_, yScale, d) => {
            const { yAccessor } = this.props;
            const y = yAccessor(d) && Math.min(yAccessor(d).bearPower, 0);
            return yScale(y);
        };
        this.fillForEachBar = (_, yAccessorNumber) => {
            const { fillStyle } = this.props;
            return yAccessorNumber % 2 === 0 ? fillStyle.bullPower : fillStyle.bearPower;
        };
    }
    render() {
        const { className, clip, stroke, straightLineStrokeStyle, straightLineStrokeDasharray, widthRatio, } = this.props;
        return (React.createElement("g", { className: className },
            React.createElement(OverlayBarSeries, { baseAt: this.yAccessorForBarBase, stroke: stroke, fillStyle: this.fillForEachBar, widthRatio: widthRatio, clip: clip, yAccessor: [
                    this.yAccessorBullTop,
                    this.yAccessorBearTop,
                    this.yAccessorBullBottom,
                    this.yAccessorBearBottom,
                ] }),
            React.createElement(StraightLine, { yValue: 0, strokeStyle: straightLineStrokeStyle, lineDash: straightLineStrokeDasharray })));
    }
}
ElderRaySeries.defaultProps = {
    fillStyle: {
        bearPower: "rgba(239, 83, 80, 0.7)",
        bullPower: "rgba(38, 166, 153, 0.7)",
    },
    className: "react-financial-charts-elderray-series",
    clip: true,
    stroke: true,
    straightLineStrokeStyle: "rgba(0, 0, 0, 0.7)",
    straightLineStrokeDasharray: "Dash",
    widthRatio: 0.8,
};
//# sourceMappingURL=ElderRaySeries.js.map