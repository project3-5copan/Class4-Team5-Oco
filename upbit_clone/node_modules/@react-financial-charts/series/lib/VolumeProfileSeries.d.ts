import * as React from "react";
export interface VolumeProfileSeriesProps {
    readonly absoluteChange: (datum: any) => number;
    readonly bins: number;
    readonly bySession?: boolean;
    readonly fill?: (widthType: {
        type: "up" | "down";
        width: number;
    }) => string;
    readonly maxProfileWidthPercent: number;
    readonly orient?: "left" | "right";
    readonly partialStartOK?: boolean;
    readonly partialEndOK?: boolean;
    readonly sessionBackGround?: string;
    readonly sessionStart: ({ d, i, plotData }: any) => boolean;
    readonly showSessionBackground?: boolean;
    readonly source: (d: number, i: number, data: ArrayLike<number>) => number;
    readonly stroke?: string;
    readonly volume: (datum: any) => number;
}
export declare class VolumeProfileSeries extends React.Component<VolumeProfileSeriesProps> {
    static defaultProps: {
        absoluteChange: (d: any) => any;
        bins: number;
        bySession: boolean;
        fill: ({ type }: {
            type: "up" | "down";
            width: number;
        }) => "#6BA583" | "#FF0000";
        maxProfileWidthPercent: number;
        orient: string;
        partialStartOK: boolean;
        partialEndOK: boolean;
        sessionBackGround: string;
        sessionStart: ({ d, i, plotData }: any) => boolean;
        showSessionBackground: boolean;
        source: (d: any) => any;
        stroke: string;
        volume: (d: any) => any;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly drawOnCanvasContext;
    private readonly helper;
}
