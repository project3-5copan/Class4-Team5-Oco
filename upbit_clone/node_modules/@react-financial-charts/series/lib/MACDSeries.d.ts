import { ScaleContinuousNumeric, ScaleTime } from "d3-scale";
import * as React from "react";
export interface MACDSeriesProps {
    readonly className?: string;
    readonly clip?: boolean;
    readonly fillStyle?: {
        divergence: string;
    };
    readonly strokeStyle?: {
        macd: string;
        signal: string;
        zero: string;
    };
    readonly widthRatio?: number;
    readonly width?: number | ((props: {
        widthRatio: number;
    }, moreProps: any) => number);
    readonly yAccessor: (data: any) => {
        divergence: number;
        signal: number;
        macd: number;
    } | undefined;
    readonly zeroLineStroke?: string;
    readonly zeroLineOpacity?: number;
}
/**
 * The MACD turns two trend-following indicators, moving averages, into a momentum oscillator by subtracting the longer moving average from the shorter one.
 */
export declare class MACDSeries extends React.Component<MACDSeriesProps> {
    static defaultProps: {
        className: string;
        clip: boolean;
        fillStyle: {
            divergence: string;
        };
        strokeStyle: {
            macd: string;
            signal: string;
            zero: string;
        };
        widthRatio: number;
        width: <T>(props: {
            widthRatio: number;
        }, moreProps: {
            xAccessor: (datum: T) => number | Date;
            xScale: ScaleTime<number, number> | ScaleContinuousNumeric<number, number>;
            plotData: T[];
        }) => number;
    };
    render(): JSX.Element;
    private readonly yAccessorForDivergenceBase;
    private readonly yAccessorForDivergence;
    private readonly yAccessorForSignal;
    private readonly yAccessorForMACD;
}
