import { ScaleContinuousNumeric, ScaleTime } from "d3-scale";
import * as React from "react";
export interface BarSeriesProps {
    readonly baseAt?: number | ((xScale: ScaleContinuousNumeric<number, number> | ScaleTime<number, number>, yScale: ScaleContinuousNumeric<number, number>, d: [number, number], moreProps: any) => number);
    readonly clip?: boolean;
    readonly fillStyle?: string | ((data: any) => string);
    readonly strokeStyle?: string;
    readonly swapScales?: boolean;
    readonly width?: number | ((props: {
        widthRatio: number;
    }, moreProps: any) => number);
    readonly widthRatio?: number;
    readonly yAccessor: (data: any) => number | undefined;
}
/**
 * A `BarSeries` component.
 */
export declare class BarSeries extends React.Component<BarSeriesProps> {
    static defaultProps: {
        baseAt: (xScale: ScaleContinuousNumeric<number, number>, yScale: ScaleContinuousNumeric<number, number>) => any;
        clip: boolean;
        fillStyle: string;
        swapScales: boolean;
        width: <T>(props: {
            widthRatio: number;
        }, moreProps: {
            xAccessor: (datum: T) => number | Date;
            xScale: ScaleTime<number, number> | ScaleContinuousNumeric<number, number>;
            plotData: T[];
        }) => number;
        widthRatio: number;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly getBars;
}
