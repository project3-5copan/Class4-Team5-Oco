import { ScaleContinuousNumeric } from "d3-scale";
import * as React from "react";
export interface SvgPathAnnotationProps {
    readonly className?: string;
    readonly datum?: any;
    readonly fill?: string | ((datum: any) => string);
    readonly onClick?: (e: React.MouseEvent, data: {
        xScale?: ScaleContinuousNumeric<number, number>;
        yScale?: ScaleContinuousNumeric<number, number>;
        datum: any;
    }) => void;
    readonly opacity?: number;
    readonly path: ({ x, y }: {
        x: number;
        y: number;
    }) => string;
    readonly plotData: any[];
    readonly stroke?: string;
    readonly tooltip?: string | ((datum: any) => string);
    readonly xAccessor?: (datum: any) => any;
    readonly x?: number | (({ xScale, xAccessor, datum, plotData, }: {
        xScale: ScaleContinuousNumeric<number, number>;
        xAccessor: (datum: any) => any;
        datum: any;
        plotData: any[];
    }) => number);
    readonly xScale?: ScaleContinuousNumeric<number, number>;
    readonly y?: number | (({ yScale, datum, plotData, }: {
        yScale: ScaleContinuousNumeric<number, number>;
        datum: any;
        plotData: any[];
    }) => number);
    readonly yScale?: ScaleContinuousNumeric<number, number>;
}
export declare class SvgPathAnnotation extends React.Component<SvgPathAnnotationProps> {
    static defaultProps: {
        className: string;
        opacity: number;
        x: ({ xScale, xAccessor, datum, }: {
            xScale: ScaleContinuousNumeric<number, number>;
            xAccessor: any;
            datum: any;
        }) => number;
    };
    render(): JSX.Element;
    private readonly handleClick;
    private readonly helper;
}
