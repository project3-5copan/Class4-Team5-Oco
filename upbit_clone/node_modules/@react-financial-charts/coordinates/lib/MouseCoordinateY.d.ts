import * as React from "react";
export interface MouseCoordinateYProps {
    readonly arrowWidth?: number;
    readonly at?: "left" | "right";
    readonly displayFormat: (value: number) => string;
    readonly dx?: number;
    readonly fontFamily?: string;
    readonly fontSize?: number;
    readonly fill?: string;
    readonly fitToText?: boolean;
    readonly opacity?: number;
    readonly orient?: "left" | "right";
    readonly rectWidth?: number;
    readonly rectHeight?: number;
    readonly stroke?: string;
    readonly strokeOpacity?: number;
    readonly strokeWidth?: number;
    readonly textFill?: string;
    readonly yAxisPad?: number;
}
export declare class MouseCoordinateY extends React.Component<MouseCoordinateYProps> {
    static defaultProps: {
        arrowWidth: number;
        at: string;
        dx: number;
        fill: string;
        fitToText: boolean;
        fontFamily: string;
        fontSize: number;
        opacity: number;
        orient: string;
        rectWidth: number;
        rectHeight: number;
        strokeOpacity: number;
        strokeWidth: number;
        textFill: string;
        yAxisPad: number;
    };
    render(): JSX.Element;
    private readonly drawOnCanvas;
    private readonly helper;
}
export declare function getYCoordinate(y: number, coordinate: string, props: any, moreProps: any): {
    coordinate: string;
    show: boolean;
    fitToText: any;
    type: string;
    orient: any;
    edgeAt: any;
    hideLine: boolean;
    fill: any;
    opacity: any;
    fontFamily: any;
    fontSize: any;
    textFill: any;
    stroke: any;
    strokeOpacity: any;
    strokeWidth: any;
    rectWidth: any;
    rectHeight: any;
    arrowWidth: any;
    dx: any;
    x1: number;
    x2: any;
    y1: number;
    y2: number;
};
